{
    "backToApps": "Back to apps",
    "backToLogin": "Back to login",
    "urls": {
        "pluginsCatalog": "http://repository.cloudifysource.org/cloudify/wagons/plugins.json"
    },
    "cluster": {
        "manager": "Manager",
        "db": "Database",
        "broker": "Message Broker",
        "copyInfo": "Copy Raw Info",
        "overview": {
            "errorHeader": "Failed to fetch status",
            "noServices": "No services available"
        },
        "servicesList": {
            "modeName": "Node Name",
            "noServices": "There are no Cluster Services available.",
            "privateIp": "Private IP",
            "publicIp": "Public IP / LB IP",
            "serviceType": "Service Type",
            "status": "Status",
            "version": "Version"
        },
        "servicesStatus": "Services Status",
        "systemStatus": "System Status"
    },
    "gettingStartedModal": {
        "disableModalLabel": "Don't show next time",
        "titles": {
            "technologiesStep": "Getting Started",
            "secretsStep": "Secrets",
            "summaryStep": "Summary",
            "statusStep": "Status"
        },
        "buttons": {
            "closeModal": "Close",
            "stepBack": "Back",
            "stepNext": "Next",
            "stepFinish": "Finish"
        },
        "initialization": {
            "pluginsMetadataLoadingError": "Plugins information loading error.",
            "secretsLoadingError": "Secrets information loading error.",
            "blueprintsMetadataLoadingError": "Blueprints information loading error"
        },
        "validation": {
            "someTechnologyRequiredError": "At least one technology needs to be selected.",
            "allSecretsRequiredError": "All secret values need to be specified."
        },
        "summary": {
            "taskListTitle": "Task List",
            "plugin": {
                "alreadyInstalledMessageSuffix": "plugin is already installed",
                "installationScheduledMessageSuffix": "plugin will be installed",
                "notFoundMessageSuffix": "plugin not found in the catalog or on the manager",
                "installationProgressMessageSuffix": "plugin installation in progress",
                "installationDoneMessageSuffix": "plugin installation done",
                "installationErrorMessageSuffix": "plugin installation error"
            },
            "secret": {
                "creationScheduledMessageSuffix": "secret will be created",
                "updateScheduledMessageSuffix": "secret will be updated",
                "settingProgressMessageSuffix": "secret setting in progress",
                "settingDoneMessageSuffix": "secret setting done",
                "settingErrorMessageSuffix": "secret setting error"
            },
            "blueprint": {
                "alreadyUploadedMessageSuffix": "blueprint is already uploaded",
                "uploadScheduledMessageSuffix": "blueprint will be uploaded",
                "uploadingProgressMessageSuffix": "blueprint upload in progress",
                "uploadingDoneMessageSuffix": "blueprint upload done",
                "uploadingErrorMessageSuffix": "blueprint upload error"
            }
        },
        "messages": {
            "pluginInstallError": "{{pluginName}} plugin installation error.",
            "secretUpdateError": "{{secretName}} secret update operation error.",
            "secretCreateError": "{{secretName}} secret create operation error.",
            "blueprintUploadError": "{{blueprintName}} blueprint upload error:\n{{uploadError}}",
            "timeoutExceededError": "Timeout exceeded.",
            "progressMessage": "Installation in progress...",
            "doneMessage": "Installation done!"
        }
    },
    "editMode": {
        "addPage": "Add Page",
        "addTabsContainer": "Add Tabs Container",
        "addWidget": {
            "addButton": "Add Widget",
            "addToContainerButtonTitle": "Add widget to this widgets container",
            "addToTabButtonTitle": "Add widget to this tab",
            "category": {
                "all": "All",
                "blueprints": "Blueprints",
                "deployments": "Deployments",
                "buttonsAndFilters": "Buttons and Filters",
                "chartsAndStatistics": "Charts and Statistics",
                "executionsNodes": "Executions/Nodes",
                "systemResources": "System Resources",
                "spire": "Spire",
                "others": "Others"
            },
            "checkbox": "Add widget to page",
            "defaultWidgetName": "Widget_{{index}}",
            "installButton": "Install new widget",
            "installModal": {
                "cancelButton": "Cancel",
                "error": {
                    "invalidUrl": "Please provide valid URL for widget's archive",
                    "noFileOrUrl": "Please provide the widget's archive URL or select a file"
                },
                "fileOrUrlLabel": "Widget package",
                "fileOrUrlPlaceholder": "Provide the widget's archive URL or click browse to select a file",
                "header": "Install new widget",
                "submitButton": "Install Widget"
            },
            "noWidgets": "No widgets available",
            "search": "Search widgets ...",
            "submitButton": "Add selected widgets ({{widgetsCount}})",
            "updateButton": "Update",
            "updateModal": {
                "button": "Update Widget",
                "header": "Update widget definition"
            }
        },
        "addWidgetsContainer": "Add Widgets Container",
        "containerRemovalModal": {
            "header": "Are you sure you want to remove this widgets container?",
            "message": "All widgets present in this container will be removed"
        },
        "defaultPageName": "Page_{{index}}",
        "editWidget": {
            "noConfiguration": "No configuration available for this widget"
        },
        "emptyContainer": {
            "line1": "This {{containerType}} is empty,",
            "line2": "don't be shy, give it a meaning!"
        },
        "exit": "Exit",
        "insertTabsContainer": "Insert Tabs Container",
        "insertWidgetsContainer": "Insert Widgets Container",
        "pageName": "You must fill a page name",
        "pageRemovalModal": {
            "header": "Are you sure you want to remove page {{pageName}}?",
            "message": "All widgets and tabs present in this page will be removed as well"
        },
        "removeTabsContainer": "Remove tabs container",
        "removeWidget": {
            "button": "Remove",
            "confirm": "Are you sure to remove widget {{name}}",
            "usedBy": {
                "header": "Widget is currently used by:",
                "manager": "Manager IP",
                "username": "Username"
            }
        },
        "removeWidgetsContainer": "Remove widgets container",
        "tabRemovalModal": {
            "header": "Are you sure you want to remove this tabs container?",
            "message": "All tabs and widgets present in this container will be removed"
        },
        "tabs": {
            "add": "Add new tab",
            "default": "Default tab",
            "name": "Tab name",
            "newTab": "New Tab",
            "removeModal": {
                "header": "Are you sure you want to remove tab {{tabName}}?",
                "message": "All widgets present in this tab will be removed as well"
            }
        }
    },
    "help": {
        "about": "About",
        "aboutModal": {
            "close": "Close",
            "licenseDetails": "License Details",
            "licenseManagement": "License Management",
            "versionDetails": "Version Details"
        },
        "contact": "Contact Us",
        "contactLink": "https://cloudify.co/contact",
        "documentation": "Documentation",
        "documentationLink": "https://docs.cloudify.co/{{version}}"
    },
    "licenseExpired": "License has expired",
    "licenseManagement": {
        "action": {
            "activeLicense": "No action required.",
            "canUpload": {
                "noLicense": "To activate this product, please enter the license key provided by Cloudify below and press update. Visit the Cloudify <a target=\"_blank\" href=\"https://cloudify.co\">web site</a> to learn more and acquire a free <a target=\"_blank\" href=\"https://cloudify.co/download/#trial\">trial license</a>.",
                "regularLicenseExpired": "Please contact <a target=\"_blank\" href=\"https://cloudify.co/support\">Cloudify support</a> to obtain a new license key.",
                "trialLicenseExpired": "Please contact <a target=\"_blank\" href=\"https://cloudify.co/contact\">Cloudify</a> to obtain a license key."
            },
            "cannotUpload": {
                "common": "Please contact your Cloudify administrator.",
                "noLicense": "To activate this product, please contact your Cloudify administrator."
            }
        },
        "allVersions": "All",
        "capabilities": "Capabilities",
        "distribution": "Distribution",
        "editLicense": "Edit License",
        "errorHeader": "License error",
        "eula": "End User License Agreement",
        "eulaLink": "https://cloudify.co/license",
        "eulaLinkCommunity": "https://cloudify.co/license-community/",
        "expirationDate": "Expiration Date",
        "expirationDateNever": "Never",
        "goToApp": "Go to app",
        "header": "License Management",
        "licenseEdition": "License Edition",
        "licensePlaceholder": "Paste the complete license string, including the license signature",
        "licensedTo": "Licensed To",
        "noVersion": "There is no version data.",
        "showLicense": "Show License",
        "subheader": {
            "activeLicense": "License is valid",
            "noLicense": "No active license",
            "regularLicenseExpired": "Product license has expired",
            "trialLicenseExpired": "The trial license has expired"
        },
        "trial": "Trial",
        "trialYes": "Yes",
        "update": "Update",
        "validForVersion": "Valid For Version",
        "version": "Version"
    },
    "login": {
        "header": "CLOUDIFY",
        "message": "Welcome to the Cloudify Management Console, Please log in",
        "error": {
            "noPassword": "Please provide password",
            "noUsername": "Please provide username"
        },
        "noTenants": {
            "header": "User is not associated with any tenants.",
            "message": "Unfortunately you cannot login since your account is not associated with any tenants. Please ask the administrator to assign at least one tenant to your account."
        },
        "password": "Password",
        "username": "Username",
        "submit": "LOGIN",
        "ssoSubmit": "LOGIN WITH SSO"
    },
    "maintenanceMode": {
        "activate": "Activate Maintenance Mode",
        "confirmModal": {
            "header": {
                "activate": "Are you sure you want to enter maintenance mode?",
                "deactivate": "Are you sure you want to exit maintenance mode?"
            },
            "activeExecutionsDelay": "There are active executions. If you confirm, maintenance mode will be activated when all executions are done."
        },
        "deactivate": "Deactivate Maintenance Mode",
        "header": "Maintenance mode",
        "message": "Server is on maintenance mode and is not available at the moment."
    },
    "managerDataError": "Error getting data from the manager, cannot load page",
    "noLicense": "No active license",
    "noPages": "No pages available to display. Please try to reset application to the default settings.",
    "notFound": {
        "header": "Page Not Found",
        "homepageLink": "Go to the Homepage",
        "message": "We are sorry, but the page you are looking for doesn't exist."
    },
    "page": {
        "description": "Page description",
        "emptyContainer": "This {{containerType}} is empty"
    },
    "pageLoadError": "Error initializing user data, cannot load page",
    "pagesResetModal": {
        "confirm": "Are you sure you want to reset application screens to default?",
        "header": "Reset pages for tenants",
        "selectTenants": "Please select tenants you would like to reset pages for:"
    },
    "pageTitle": "Cloudify Console",
    "productName": "Cloudify",
    "redirecting": "Redirecting to {{url}}...",
    "shared": {
        "executionStatus": {
            "scheduledFor": "Scheduled for: <strong>{{datetime}}}</strong>"
        },
        "idPopup": {
            "copyButton": "Copy ID",
            "label": "ID"
        }
    },
    "templates": {
        "breadcrumb": "Template management",
        "close": "Close",
        "createPageModal": {
            "create": "Create",
            "header": "Create page",
            "pageName": "Page name",
            "pageNameError": "Please provide correct page name"
        },
        "createTemplateModal": {
            "addPage": "Add page",
            "availablePages": "Available pages",
            "button": "Create template",
            "create": "Create",
            "createHeader": "Create template",
            "errors": {
                "page": "Please select page",
                "role": "Please select role",
                "templateName": "Please provide correct template name",
                "tenant": "Please select tenant"
            },
            "noPagesAvailable": "No pages available",
            "noPagesSelected": "No pages selected",
            "removePage": "Remove page",
            "reorderPage": "Reorder page",
            "roles": "Roles",
            "selectedPages": "Selected pages",
            "templateName": "Template name",
            "tenants": "Tenants",
            "update": "Update",
            "updateHeader": "Update template {{templateName}}"
        },
        "pageManagement": {
            "breadcrumb": "Template management",
            "cancel": "Cancel",
            "cantDelete": "Page is used by the templates and cannot be deleted",
            "drillDownWarning": "Drill down action is not available in the template management",
            "editHeader": "Page management",
            "exit": "Exit",
            "header": "Pages",
            "invalidWidgets": "Page template contains invalid widgets definitions: {{widgetsList}}",
            "pageNamePlaceholder": "You must fill a page name",
            "previewHeader": "Page preview",
            "removeConfirm": "Are you sure to remove this page?",
            "save": "Save",
            "table": {
                "pageID": "Page id",
                "pageName": "Page name",
                "templates": "Templates",
                "updatedAt": "Updated at",
                "updatedBy": "Updated by"
            }
        },
        "templateManagement": {
            "header": "Templates",
            "pageList": {
                "noPages": "No pages available",
                "removeConfirm": "Are you sure to remove this page from template?"
            },
            "pageNotUsed": "Page not used by any template",
            "removeConfirm": "Are you sure to remove this template?",
            "roleList": {
                "noRoles": "No roles available",
                "removeConfirm": "Are you sure to remove this role from template?"
            },
            "table": {
                "roles": "Roles",
                "templateId": "Template id",
                "tenants": "Tenants",
                "updatedAt": "Updated at",
                "updatedBy": "Updated by"
            },
            "tenantsList": {
                "noTenants": "No tenants available",
                "removeConfirm": "Are you sure to remove this tenant from template?"
            }
        }
    },
    "tours": {
        "buttonTitle": "Take a tour",
        "next": "Next",
        "nextPage": "Next (change page)",
        "noPage": {
            "message": "Cannot find <strong>{{page}}</strong> page. Tours are intended to work only on default templates. Reset templates to finish this tour.",
            "title": "No page"
        },
        "noSelector": {
            "message": "Cannot find element for the next tour step on the screen.",
            "title": "No element"
        },
        "noTarget": {
            "message": "Cannot find target element. Tours are intended to work only on default templates. Reset templates to finish this tour.",
            "title": "No target element for next step"
        }
    },
    "unexpectedError": "Unexpected Error Occurred",
    "users": {
        "changePassword": "Change Password",
        "changePasswordModal": {
            "change": "Change",
            "errors": {
                "noPassword": "Please provide user password",
                "noPasswordConfirmation": "Please provide password confirmation",
                "passwordsMismatch": "Passwords do not match"
            },
            "header": "Change password for {{username}}",
            "password": "Password",
            "passwordConfirm": "Confirm password"
        },
        "enterEditMode": "Edit Mode",
        "exitEditMode": "Exit Edit Mode",
        "licenseManagement": "License Management",
        "logout": "Logout",
        "resetTemplates": {
            "label": "Reset Templates",
            "title": "Reset application screens"
        },
        "templateManagement": "Template Management"
    },
    "widget": {
        "config": {
            "pollingTime": {
                "description": "Data of the widget will be refreshed per provided interval time in seconds",
                "name": "Refresh time interval",
                "placeholder": "Enter time interval in seconds"
            }
        },
        "detailedRenderError": "Error rendering widget: {{errorDetails}}",
        "fetchDataFunctionError": "Widget doesnt have a fetchData function",
        "fetchError": "Error fetching widget data",
        "loadError": "Cannot load widget {{widgetName}}. It might not be installed in your env. Please contact administrator.",
        "loading": "Loading...",
        "renderError": "Cannot render widget. Check browser console for details.",
        "unexpectedError": "An unexpected error occurred",
        "validationErrors": {
            "idNotSpecified": "Mandatory field - 'id' - not specified in widget definition.",
            "invalidPermission": "Specified widget permission ('{{permission}}') not found in available permissions list.",
            "multipleDefinitions": "Only single widget should be defined within widget.js",
            "multipleErrors": "Multiple errors occured: {{}}",
            "nameNotSpecified": "Mandatory field - 'name' - not specified in widget definition.",
            "noWidgetDefinition": "Widget not properly initialized. Please check if widget.js is correctly defined."
        }
    },
    "widgets": {
        "common": {
            "deployments": {
                "actionsMenu": {
                    "install": "Install",
                    "update": "Update",
                    "setSite": "Set Site",
                    "manageLabels": "Manage Labels",
                    "uninstall": "Uninstall",
                    "delete": "Delete",
                    "forceDelete": "Force Delete",
                    "fetchError": "Cannot fetch deployment '{{ deploymentId }}'.",
                    "tooltip": "Deployment action"
                },
                "workflowsMenu": {
                    "tooltip": "Execute workflow"
                },
                "executeModal": {
                    "header": {
                        "noDeployment": "Execute workflow {{workflowName}}",
                        "singleDeployemnt": "Execute workflow {{workflowName}} on {{deploymentName}}",
                        "multipleDeployments": "Execute workflow {{workflowName}} on multiple deployments"
                    },
                    "errors": {
                        "missingDeployment": "Missing deployment.",
                        "missingWorkflow": "Missing workflow.",
                        "workflowError": "Workflow '{{ workflowName }}' does not exist for deployment '{{ deploymentId }}'.",
                        "scheduleTimeError": "Please provide valid scheduled time (in the future, using format: YYYY-MM-DD HH:mm)",
                        "yamlFileError": "Loading values from YAML file failed: {{errorMessage}}"
                    },
                    "paramsHeader": "Parameters",
                    "noParams": "No parameters available for the execution",
                    "execute": "Execute",
                    "actionsHeader": "Actions",
                    "actions": {
                        "force": {
                            "label": "Force",
                            "help": "Execute the workflow even if there is an ongoing execution for the given deployment. You cannot use this option with \"Queue\"."
                        },
                        "dryRun": {
                            "label": "Dry run",
                            "help": "If set, no actual operations will be performed. Executed tasks will be logged without side effects. You cannot use this option with \"Queue\"."
                        },
                        "queue": {
                            "label": "Queue",
                            "help": "If set, executions that can`t currently run will be queued and run automatically when possible. You cannot use this option with \"Force\" and \"Dry run\"."
                        },
                        "schedule": {
                            "label": "Schedule",
                            "help": "If set, workflow will be executed at specific time (local timezone) provided below. You cannot use this option with \"Queue\"."
                        }
                    }
                },
                "removeModal": {
                    "deleteDescription": "Are you sure you want to remove deployment '{{ deploymentId }}'?",
                    "forceDeleteDescription": "Force delete will ignore any existing live nodes, or existing deployments which depend on this deployment.\nIt's recommended to first run uninstall to stop the live nodes, and make sure there are no running installations which depend on this deployment - and then run delete.\nAre you sure you want to ignore the live nodes and delete the deployment '{{ deploymentId }}'?"
                },
                "setSiteModal": {
                    "header": "Set the site of deployment '{{ deploymentId }}'",
                    "siteNameLabel": "Site name",
                    "detachSiteLabel": "Detach from the current site",
                    "updateButton": "Update"
                },
                "deployModal": {
                    "header": "Deploy blueprint {{blueprintId}}",
                    "inputs": {
                        "deploymentId": {
                            "label": "Deployment ID",
                            "help": "Specify an ID for this deployment instance."
                        },
                        "deploymentName": {
                            "label": "Deployment name",
                            "help": "Specify a name for this deployment instance."
                        },
                        "blueprintName": {
                            "label": "Blueprint",
                            "help": "Select the blueprint based on which this deployment will be created."
                        },
                        "siteName": {
                            "label": "Site name",
                            "help": "Specify a site to which this deployment will be assigned."
                        },
                        "labels": {
                            "label": "Labels"
                        },
                        "skipPluginsValidation": {
                            "label": "Skip plugins validation",
                            "message": "The recommended path is uploading plugins as wagons. This option is designed for plugin development and advanced users only."
                        },
                        "runtimeOnlyEvaluation": {
                            "label": "Runtime only evaluation",
                            "help": "If set, then get_property and get_input intrinsic functions will be evaluated on demand at runtime. If not set, then evaluation will be done at deployment creation time."
                        },
                        "deploymentInputs": {
                            "loading": "Loading inputs...",
                            "noInputs": "No inputs available for the blueprint"
                        }
                    },
                    "sections": {
                        "deploymentMetadata": "Deployment metadata",
                        "executionParameters": "Execution parameters"
                    },
                    "buttons": {
                        "deploy": "Deploy",
                        "deployAndInstall": "Deploy & Install"
                    },
                    "steps": {
                        "deploy": {
                            "validatingData": "1/2: Validating data...",
                            "deployingBlueprint": "2/2: Deploying blueprint..."
                        },
                        "deployAndInstall": {
                            "validatingData": "1/4: Validating data...",
                            "deployingBlueprint": "2/4: Deploying blueprint...",
                            "waitingForDeployment": "3/4: Creating deployment environment...",
                            "installingDeployment": "4/4: Installing deployment..."
                        }
                    },
                    "errors": {
                        "loadingYamlFileFailed": "Loading values from YAML file failed: {{ reason }}",
                        "noBlueprintName": "Please select blueprint from the list",
                        "noDeploymentName": "Please provide deployment name",
                        "noDeploymentId": "Please provide deployment ID",
                        "deploymentCreationFailed": "Deployment {{ deploymentName }} environment creation failed. {{ error }}",
                        "deploymentInstallationFailed": "Deployment {{ deploymentName }} installation failed: {{ error }}"
                    }
                }
            },
            "labels": {
                "addButton": "Add",
                "keyPlaceholder": "Select or type in a key",
                "newKey": "New key",
                "newValue": "New value",
                "valuePlaceholder": "Select or type in a value",
                "keyValidationError": "Only letters, digits and the characters \"-\", \".\" and \"_\" are allowed.",
                "valueValidationError": "The \" character and control characters are not allowed.",
                "invalidKeyError": "All labels starting with `{{ keyPrefix }}` are reserved for internal usage and should not be used unless there is a need to override default functionality. The following labels are allowed for such override: {{ reservedKeys }}.",
                "input": {
                    "label": "Labels",
                    "help": "A list of labels - key-value pairs - that can be assigned with a deployment"
                },
                "fetchingLabelsError": "Cannot fetch labels for deployment '{{deploymentId}}'",
                "labelDuplicationError": "Cannot add the same label twice",
                "modalHeader": "Manage labels for deployment '{{deploymentId}}'",
                "modalApplyButton": "Apply"
            },
            "filters": {
                "form": {
                    "buttons": {
                        "addRule": "Add new rule",
                        "removeRule": "Remove rule"
                    },
                    "inputsPlaceholders": {
                        "blueprintId": "Select or type in blueprints",
                        "siteName": "Select or type in site names",
                        "createdBy": "Select or type in usernames",
                        "multipleStrings": "Type in values"
                    },
                    "ruleTypesLabels": {
                        "label": "Label",
                        "blueprintId": "Blueprint",
                        "siteName": "Site name",
                        "createdBy": "Creator"
                    },
                    "operatorsLabels": {
                        "anyOf": "is one of",
                        "notAnyOf": "is not one of",
                        "isNot": "is not one of (or no such key)",
                        "isNull": "key is not",
                        "isNotNull": "key is",
                        "contains": "contains",
                        "notContains": "does not contain",
                        "startsWith": "starts with",
                        "endsWith": "ends with"
                    }
                }
            },
            "readmes": {
                "linksBasePath": "https://docs.cloudify.co/6.0.0",
                "params": {
                    "cfy_composer_link": "/developer/composer/",
                    "cfy_composer_name": "Cloudify Composer",
                    "cfy_console_name": "Cloudify Management Console",
                    "cfy_manager_name": "Cloudify Manager",
                    "cfy_spire_name": "Cloudify Spire",
                    "mgr_premium_title": "Cloudify Premium Manager",
                    "product_name": "Cloudify"
                }
            },
            "revertToDefault": "Revert to default value",
            "urls": {
                "blueprintsCatalog": "http://repository.cloudifysource.org/cloudify/blueprints/5.1/examples.json",
                "helloWorldBlueprint": "https://github.com/cloudify-cosmo/cloudify-hello-world-example/archive/master.zip",
                "linkParameterExample": "https://cloudify.co"
            },
            "noDataMessage": {
                "invalidUrl": "The widget content cannot be displayed because configured URL does not point to a valid {{repositoryName}} repository JSON data. Please check widget's configuration.",
                "noConnection": "The widget content cannot be displayed because there is no connection to {{repositoryName}} repository. Please check network connection and widget's configuration."
            },
            "blueprintUpload": {
                "uploadLabels": {
                    "pending": "1/5: Waiting for blueprint upload to start...",
                    "uploading": "2/5: Uploading blueprint...",
                    "extracting": "3/5: Extracting blueprint...",
                    "parsing": "4/5: Parsing blueprint...",
                    "uploadingImage": "5/5: Uploading image..."
                },
                "modal": {
                    "header": "Upload blueprint",
                    "uploadButton": "Upload"
                },
                "errorHeaders": {
                    "failedUploading": "Blueprint upload failed",
                    "failedExtracting": "Blueprint extraction failed",
                    "failedParsing": "Blueprint parsing failed"
                },
                "validationErrors": {
                    "invalidBlueprintUrl": "Please provide valid URL for blueprint package",
                    "invalidImageUrl": "Please provide valid URL for blueprint icon",
                    "noBlueprintPackage": "Please select blueprint package",
                    "noBlueprintName": "Please provide blueprint name",
                    "noBlueprintYamlFile": "Please provide blueprint YAML file"
                },
                "inputs": {
                    "blueprintName": {
                        "label": "Blueprint name",
                        "help": "The package will be uploaded to the Manager as a Blueprint resource, under the name you specify here."
                    },
                    "blueprintYamlFile": {
                        "label": "Blueprint YAML file",
                        "help": "If you choose archive as blueprint package, you must specify the blueprint YAML file for your environment, because the archive can contain more than one YAML file."
                    },
                    "blueprintPackage": {
                        "label": "Blueprint package",
                        "help": "You can provide single YAML file or blueprint archive. Supported types are: yml, yaml, zip, tar, tar.gz and tar.bz2. The archive package must contain exactly one directory that includes at least one YAML file.",
                        "placeholder": "Provide the blueprint's URL or click browse to select a file"
                    },
                    "blueprintIcon": {
                        "help": "(Optional) The blueprint icon file is shown with the blueprint in the local blueprint widget.",
                        "placeholder": "Provide the image file URL or click browse to select a file"
                    }
                }
            }
        },
        "executions": {
            "noExecutionFound": "There are no executions that could be shown."
        },
        "deploymentsView": {
            "name": "Deployments view",
            "description": "A complete deployments view – Deployment list, map view, and detailed deployment info",
            "configuration": {
                "filterId": {
                    "name": "Name of the saved filter to apply"
                },
                "filterByParentDeployment": {
                    "name": "Filter by parent deployment",
                    "description": "Only show deployments directly attached to the deployment selected on the previous page (when in drill-down)."
                },
                "fieldsToShow": {
                    "name": "List of fields to show in the table",
                    "placeholder": "Select fields from the list"
                },
                "mapOpenByDefault": {
                    "name": "Show map by default"
                },
                "mapHeight": {
                    "name": "Map height",
                    "description": "The height of the map in pixels"
                }
            },
            "header": {
                "map": {
                    "label": "Map",
                    "openMap": "Open map",
                    "closeMap": "Close map"
                },
                "filter": {
                    "button": "Filter",
                    "clearButton": "Clear selected filter",
                    "unsavedFilter": "Unsaved filter",
                    "modal": {
                        "header": "Select a filter",
                        "submit": "Apply",
                        "save": "Save",
                        "noFilterError": "Please select a filter or specify filter rules",
                        "noFilterRulesError": "Please specify filter rules",
                        "filterRulesInvalidError": "Please provide all the values in filter rules section",
                        "filterId": "Filter ID",
                        "filterRules": "Filter rules"
                    }
                },
                "bulkActions": {
                    "button": "Bulk Actions",
                    "deployOn": {
                        "title": "Deploy On",
                        "modal": {
                            "header": "Deploy on",
                            "steps": {
                                "validatingData": "1/4: Validating data...",
                                "fetchingEnvironments": "2/4: Fetching environments list...",
                                "creatingDeployments": "3/4: Creating deployments...",
                                "installingDeployments": "4/4: Installing deployments..."
                            },
                            "executionStarted": "Group execution started"
                        }
                    },
                    "runWorkflow": {
                        "title": "Run Workflow",
                        "modal": {
                            "header": "Run workflow on filtered deployments",
                            "inputs": {
                                "workflowId": {
                                    "label": "Workflow",
                                    "help": "Name of the workflow to be started on the filtered deployments. Only workflows without mandatory parameters are listed."
                                }
                            },
                            "buttons": {
                                "run": "Run",
                                "close": "Close"
                            },
                            "messages": {
                                "limitations": "The workflow will run with default parameters and without any special workflow flags such as 'Force', 'Dry run' or 'Queue'.",
                                "executionGroupStarted": "Workflow has been started.",
                                "fetchingWorkflows": "Fetching workflows...",
                                "creatingDeploymentGroup": "1/2: Creating deployment group...",
                                "startingExecutionGroup": "2/2: Starting execution group..."
                            },
                            "errors": {
                                "noWorkflowError": "Please select a workflow",
                                "workflowsFetchFailed": "Error occurred when fetching workflows"
                            }
                        }
                    },
                    "common": {
                        "executionStartedModal": {
                            "header": "Group execution started",
                            "message": "Click on 'Go to Executions page' button to track the progress",
                            "buttons": {
                                "goToExecutionsPage": "Go to Executions page",
                                "close": "Close"
                            }
                        }
                    }
                }
            },
            "iconLabels": {
                "inProgress": "In progress",
                "requiresAttention": "Requires attention"
            },
            "columns": {
                "status": {
                    "name": "Status"
                },
                "id": {
                    "name": "ID"
                },
                "name": {
                    "name": "Name"
                },
                "blueprintName": {
                    "name": "Blueprint Name"
                },
                "environmentType": {
                    "name": "Environment Type"
                },
                "location": {
                    "name": "Location"
                },
                "subenvironmentsCount": {
                    "name": "Subenvironments",
                    "tooltip": "Sub-environments (Total)"
                },
                "subservicesCount": {
                    "name": "Subservices",
                    "tooltip": "Services (Total)"
                }
            },
            "map": {
                "loadingSites": "Loading sites",
                "errorLoadingSites": "Error loading sites",
                "tooltip": {
                    "status": {
                        "good": "Good",
                        "inProgress": "In progress",
                        "requiresAttention": "Requires attention"
                    }
                }
            },
            "drillDown": {
                "name": "Deployments view (drilled-down)",
                "description": "A complete deployments view in a drilled-down context – Deployment list, map view, and detailed deployment info",
                "breadcrumbs": {
                    "environments": "Environments",
                    "services": "Services"
                },
                "buttons": {
                    "detailsFetchingError": "Could not fetch deployment details",
                    "environments": {
                        "label": "Subenvironments",
                        "title": "Drill down to subenvironments"
                    },
                    "services": {
                        "label": "Services",
                        "title": "Drill down to subservices"
                    }
                }
            },
            "messages": {
                "noData": "No Results Found. Try changing the filter's parameters",
                "loadingFilterRules": "Loading filter rules",
                "errorLoadingFilterRules": "Error when loading filter rules",
                "loadingDeployments": "Loading deployments",
                "errorLoadingDeployments": "Error when loading deployments",
                "missingParentDeploymentId": {
                    "header": "Cannot filter by parent deployment",
                    "message": "A selected deployment cannot be found in the parent page. Turn off the option in the configuration."
                },
                "missingFilterRules": {
                    "header": "Internal error occurred",
                    "message": "Try going to the home page and drill down again."
                },
                "unexpectedWidgetUsage": {
                    "header": "Unexpected widget usage",
                    "message": "The drilled-down widget should not be used on a top-level page, only in drill-down pages. Most of the time you do not need to add it manually, as it is present on the drill-down Environments/Services page automatically. You may be looking for a regular Deployments View widget."
                }
            }
        },
        "maintenanceModeButton": {
            "activating": "Maintenance Mode is being activated"
        },
        "userManagement": {
            "columns": {
                "username": "Username",
                "lastLoginAt": "Last login",
                "isAdmin": "Admin",
                "active": "Active",
                "showGettingStarted": "Getting\nstarted",
                "groupCount": "# Groups",
                "tenantCount": "# Tenants"
            }
        },
        "filters": {
            "name": "Filters",
            "description": "This widget shows a list of defined filters",
            "noFilters": "There are no filters defined",
            "add": "Add",
            "columns": {
                "name": "Filter name",
                "creator": "Creator",
                "created": "Created",
                "system": "System",
                "actions": {
                    "delete": "Delete filter",
                    "edit": "Edit filter",
                    "clone": "Clone filter",
                    "systemFilter": "System filter can't be edited or deleted"
                }
            },
            "modal": {
                "id": "Filter ID",
                "rules": "Filter rules",
                "errors": {
                    "idMissing": "Please provide the filter ID",
                    "filterRulesInvalid": "Please provide all the values in filter rules section"
                },
                "header": {
                    "add": "Add filter",
                    "edit": "Edit filter '{{filterId}}'",
                    "clone": "Clone filter '{{filterId}}'"
                }
            },
            "deleteConfirm": "Are you sure you want to remove filter '{{filterId}}'?",
            "filterInUse": {
                "heading": "Filter '{{filterId}}' cannot be removed:",
                "usageInfo": "Used as default filter in '{{widgetName}}' widget in '{{pageName}}' page by user '{{username}}'"
            }
        },
        "labels": {
            "name": "Labels",
            "description": "This widget shows a list of defined labels",
            "columns": {
                "key": "Key",
                "value": "Value",
                "actions": {
                    "edit": "Edit label",
                    "delete": "Delete label"
                }
            },
            "noDeployment": "No deployment selected",
            "noLabels": "There are no Labels defined",
            "add": "Add",
            "export": "Export",
            "addHeader": "Add labels for deployment '{{deploymentId}}'",
            "revert": "Revert to initial value",
            "deleteConfirm": "Are you sure you want to remove label"
        }
    }
}
