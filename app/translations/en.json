{
    "backToApps": "Back to apps",
    "backToLogin": "Back to login",
    "urls": {
        "pluginsCatalog": "https://marketplace.cloudify.co/plugins/catalog"
    },
    "cluster": {
        "manager": "Manager",
        "db": "Database",
        "broker": "Message Broker",
        "copyInfo": "Copy Raw Info",
        "overview": {
            "errorHeader": "Failed to fetch status",
            "noServices": "No services available"
        },
        "servicesList": {
            "nodeName": "Node name",
            "noServices": "There are no Cluster Services available.",
            "privateIp": "Private IP",
            "publicIp": "Public IP / LB IP",
            "serviceType": "Service type",
            "status": "Status",
            "version": "Version"
        },
        "servicesStatus": "Services Status",
        "systemStatus": "System Status"
    },
    "contactDetailsModal": {
        "header": "Welcome to Cloudify",
        "form": {
            "fields": {
                "firstName": {
                    "label": "First Name",
                    "validationMessage": "Please provide a valid first name, which should be between 2 to 20 characters long"
                },
                "lastName": {
                    "label": "Last Name",
                    "validationMessage": "Please provide a valid last name, which should be between 2 and 20 characters long"
                },
                "email": {
                    "label": "Email",
                    "validationMessage": "Please provide a valid email address"
                },
                "phone": {
                    "label": "Phone number",
                    "validationMessage": "Please provide a valid phone number, which should consists only of 4 - 20 digits"
                },
                "isEULA": {
                    "label": "By downloading Cloudify you agree to the terms of the <a href=\"{{eulaLink}}\" target=\"_blank\" onclick=\"event.stopPropagation();\">End User License Agreement</a>"
                },
                "isSendServicesDetails": {
                    "label": "I agree to receive communications from Cloudify and store and process this information to provide you trial license key in accordance with our <a href=\"https://cloudify.co/privacy-policy/\" target=\"_blank\" onclick=\"event.stopPropagation();\">Privacy Policy</a>"
                }
            },
            "validation": {
                "isFieldRequired": "Field is required"
            },
            "buttons": {
                "submit": "Continue"
            },
            "submittingError": {
                "title": "Form data cannot be submitted",
                "description": "Please check network connection and try to submit the data again"
            }
        }
    },
    "gettingStartedModal": {
        "cancelConfirm": "Are you sure you want to cancel the setup process?",
        "disableModalLabel": "Don't show next time",
        "titles": {
            "environmentsStep": "First, please select your environment(s)",
            "secretsStep": "Secrets",
            "summaryStep": "Finally, please review your selected task list below and click ‘Finish’ to begin installation...",
            "statusStep": "Status"
        },
        "secretsSubtitle": "Now, please fill in the fields below (and click ‘Next’)",
        "buttons": {
            "closeModal": "Close",
            "stepBack": "Back",
            "stepNext": "Next",
            "stepFinish": "Finish"
        },
        "initialization": {
            "pluginsMetadataLoadingError": "Plugins information loading error.",
            "secretsLoadingError": "Secrets information loading error.",
            "blueprintsMetadataLoadingError": "Blueprints information loading error"
        },
        "summary": {
            "taskListTitle": "Task List",
            "plugin": {
                "alreadyInstalledMessageSuffix": "plugin is already installed",
                "installationScheduledMessageSuffix": "plugin will be installed",
                "notFoundMessageSuffix": "plugin not found in the catalog or on the manager",
                "installationProgressMessageSuffix": "plugin installation in progress",
                "installationDoneMessageSuffix": "plugin installation done",
                "installationErrorMessageSuffix": "plugin installation error"
            },
            "secret": {
                "creationScheduledMessageSuffix": "secret will be created",
                "updateScheduledMessageSuffix": "secret will be updated",
                "skipScheduledMessageSufix": "secret will be skipped",
                "settingProgressMessageSuffix": "secret setting in progress",
                "settingDoneMessageSuffix": "secret setting done",
                "settingErrorMessageSuffix": "secret setting error"
            },
            "blueprint": {
                "alreadyUploadedMessageSuffix": "blueprint is already uploaded",
                "uploadScheduledMessageSuffix": "blueprint will be uploaded",
                "uploadingProgressMessageSuffix": "blueprint upload in progress",
                "uploadingDoneMessageSuffix": "blueprint upload done",
                "uploadingErrorMessageSuffix": "blueprint upload error"
            }
        },
        "welcomeText": "Welcome to Cloudify: your open source,\nmulti-cloud orchestration platform.\n\nWe’ll start by setting up your cloud environment\nin the following easy steps. Ready? Let’s go.\n\nNote: this process can take up to 5 minutes,\nand you will need your API access keys.",
        "welcomeLogoLabel": "CLOUDIFY",
        "messages": {
            "pluginInstallError": "{{pluginName}} plugin installation error.",
            "secretUpdateError": "{{secretName}} secret update operation error.",
            "secretCreateError": "{{secretName}} secret create operation error.",
            "blueprintUploadError": "{{blueprintName}} blueprint upload error:\n{{uploadError}}",
            "timeoutExceededError": "Timeout exceeded.",
            "progressMessage": "Installation in progress...",
            "doneMessage": "Installation completed! (you can now close this window)",
            "failureMessage": "Installation failed."
        }
    },
    "editMode": {
        "addPage": "Add Page",
        "addPageGroup": "Add Page Group",
        "addTabsContainer": "Add Tabs Container",
        "addWidget": {
            "addButton": "Add Widget",
            "addToContainerButtonTitle": "Add widget to this widgets container",
            "addToTabButtonTitle": "Add widget to this tab",
            "category": {
                "all": "All",
                "blueprints": "Blueprints",
                "deployments": "Deployments",
                "buttonsAndFilters": "Buttons and Filters",
                "chartsAndStatistics": "Charts and Statistics",
                "executionsNodes": "Executions/Nodes",
                "systemResources": "System Resources",
                "spire": "Spire",
                "others": "Others"
            },
            "checkbox": "Add widget to page",
            "defaultWidgetName": "Widget_{{index}}",
            "installButton": "Install new widget",
            "installModal": {
                "cancelButton": "Cancel",
                "error": {
                    "invalidUrl": "Please provide valid URL for widget's archive",
                    "noFileOrUrl": "Please provide the widget's archive URL or select a file"
                },
                "fileOrUrlLabel": "Widget package",
                "fileOrUrlPlaceholder": "Provide the widget's archive URL or click browse to select a file",
                "header": "Install new widget",
                "submitButton": "Install Widget"
            },
            "noWidgets": "No widgets available",
            "search": "Search widgets ...",
            "submitButton": "Add selected widgets ({{widgetsCount}})",
            "updateButton": "Update",
            "updateModal": {
                "button": "Update Widget",
                "header": "Update widget definition"
            }
        },
        "addWidgetsContainer": "Add Widgets Container",
        "containerRemovalModal": {
            "header": "Are you sure you want to remove this widgets container?",
            "message": "All widgets present in this container will be removed"
        },
        "defaultPageName": "Page_{{index}}",
        "defaultPageGroupName": "Page_Group_{{index}}",
        "editWidget": {
            "noConfiguration": "No configuration available for this widget"
        },
        "emptyContainer": {
            "line1": "This {{containerType}} is empty,",
            "line2": "don't be shy, give it a meaning!"
        },
        "exit": "Exit",
        "insertTabsContainer": "Insert Tabs Container",
        "insertWidgetsContainer": "Insert Widgets Container",
        "pageName": "You must fill a page name",
        "pageRemovalModal": {
            "header": "Are you sure you want to remove page {{pageName}}?",
            "message": "All widgets and tabs present in this page will be removed as well"
        },
        "removeTabsContainer": "Remove tabs container",
        "removeWidget": {
            "button": "Remove",
            "confirm": "Are you sure to remove widget {{name}}",
            "usedBy": {
                "header": "Widget is currently used by:",
                "manager": "Manager IP",
                "username": "Username"
            }
        },
        "removeWidgetsContainer": "Remove widgets container",
        "tabRemovalModal": {
            "header": "Are you sure you want to remove this tabs container?",
            "message": "All tabs and widgets present in this container will be removed"
        },
        "tabs": {
            "add": "Add new tab",
            "default": "Default tab",
            "name": "Tab name",
            "newTab": "New Tab",
            "removeModal": {
                "header": "Are you sure you want to remove tab {{tabName}}?",
                "message": "All widgets present in this tab will be removed as well"
            }
        }
    },
    "help": {
        "about": "About",
        "aboutModal": {
            "close": "Close",
            "licenseDetails": "License Details",
            "licenseManagement": "License Management",
            "versionDetails": "Version Details"
        },
        "contact": "Contact Us",
        "contactLink": "https://cloudify.co/contact",
        "documentation": "Documentation",
        "documentationLink": "https://docs.cloudify.co/{{version}}"
    },
    "licenseExpired": "License has expired",
    "licenseManagement": {
        "action": {
            "activeLicense": "No action required.",
            "canUpload": {
                "noLicense": "To activate this product, please enter the license key provided by Cloudify below and press update. Visit the Cloudify <a target=\"_blank\" href=\"https://cloudify.co\">web site</a> to learn more and acquire a free <a target=\"_blank\" href=\"https://cloudify.co/download/#trial\">trial license</a>.",
                "regularLicenseExpired": "Please contact <a target=\"_blank\" href=\"https://cloudify.co/support\">Cloudify support</a> to obtain a new license key.",
                "trialLicenseExpired": "Please contact <a target=\"_blank\" href=\"https://cloudify.co/contact\">Cloudify</a> to obtain a license key."
            },
            "cannotUpload": {
                "common": "Please contact your Cloudify administrator.",
                "noLicense": "To activate this product, please contact your Cloudify administrator."
            }
        },
        "allVersions": "All",
        "capabilities": "Capabilities",
        "distribution": "Distribution",
        "editLicense": "Edit License",
        "errorHeader": "License error",
        "eula": "End User License Agreement",
        "eulaLink": "https://cloudify.co/license",
        "eulaLinkCommunity": "https://cloudify.co/license-community/",
        "expirationDate": "Expiration Date",
        "expirationDateNever": "Never",
        "getLicense": "Get a license",
        "getLicenseLink": "https://cloudify.co/cloudify-premium-download/",
        "goToApp": "Go to app",
        "header": "License Management",
        "licenseEdition": "License Edition",
        "licensePlaceholder": "Paste the complete license string, including the license signature",
        "licensedTo": "Licensed To",
        "noVersion": "There is no version data.",
        "showLicense": "Show License",
        "subheader": {
            "activeLicense": "License is valid",
            "noLicense": "No active license",
            "regularLicenseExpired": "Product license has expired",
            "trialLicenseExpired": "The trial license has expired"
        },
        "trial": "Trial",
        "trialYes": "Yes",
        "update": "Update",
        "validForVersion": "Valid For Version",
        "version": "Version"
    },
    "login": {
        "header": "CLOUDIFY",
        "message": "Welcome to the Cloudify Management Console, Please log in",
        "firstLoginHint": "For the first login please use\nUsername: admin\nPassword: admin\n\nIt's recommended to change the password after login.",
        "error": {
            "noPassword": "Please provide password",
            "noUsername": "Please provide username"
        },
        "noTenants": {
            "header": "User is not associated with any tenants.",
            "message": "Unfortunately you cannot login since your account is not associated with any tenants. Please ask the administrator to assign at least one tenant to your account."
        },
        "password": "Password",
        "username": "Username",
        "submit": "LOGIN",
        "ssoSubmit": "LOGIN WITH SSO"
    },
    "maintenanceMode": {
        "activate": "Activate Maintenance Mode",
        "confirmModal": {
            "header": {
                "activate": "Are you sure you want to enter maintenance mode?",
                "deactivate": "Are you sure you want to exit maintenance mode?"
            },
            "activeExecutionsDelay": "There are active executions. If you confirm, maintenance mode will be activated when all executions are done."
        },
        "deactivate": "Deactivate Maintenance Mode",
        "header": "Maintenance mode",
        "message": "Server is on maintenance mode and is not available at the moment."
    },
    "managerDataError": "Error getting data from the manager, cannot load page",
    "noLicense": "No active license",
    "noPages": "No pages available to display. Please try to reset application to the default settings.",
    "notFound": {
        "header": "Page Not Found",
        "homepageLink": "Go to the Homepage",
        "message": "We are sorry, but the page you are looking for doesn't exist."
    },
    "page": {
        "description": "Page description",
        "emptyContainer": "This {{containerType}} is empty"
    },
    "pageLoadError": "Error initializing user data, cannot load page",
    "pagesResetModal": {
        "confirm": "Are you sure you want to reset application screens to default?",
        "header": "Reset pages for tenants",
        "selectTenants": "Please select tenants you would like to reset pages for:"
    },
    "pageTitle": "Cloudify Console",
    "productName": "Cloudify",
    "redirecting": "Redirecting to {{url}}...",
    "shared": {
        "executionStatus": {
            "scheduledFor": "Scheduled for: <strong>{{datetime}}}</strong>"
        },
        "idPopup": {
            "copyButton": "Copy ID",
            "label": "ID"
        },
        "dynamicTable": {
            "addButton": "Add",
            "removeButton": "Remove"
        }
    },
    "sidebar": {
        "licenseTag": {
            "expired": "Expired",
            "trial": "Trial",
            "community": "Community"
        }
    },
    "templates": {
        "breadcrumb": "Template management",
        "close": "Close",
        "templates": "Templates",
        "pageGroups": "Page groups",
        "pages": "Pages",
        "usedByTemplates": "Used in templates",
        "usedByPageGroups": "Used in page groups",
        "createPageModal": {
            "create": "Create",
            "header": "Create page",
            "pageName": "Page name",
            "pageNameError": "Please provide correct page name"
        },
        "createTemplateModal": {
            "allTenants": "All tenants",
            "addPage": "Add page",
            "addPageGroup": "Add page group",
            "availablePages": "Available pages",
            "availablePageGroups": "Available page groups",
            "create": "Create",
            "createHeader": "Create template",
            "errors": {
                "pageMenuItem": "Please select at least one page menu item",
                "role": "Please select role",
                "templateName": "Please provide correct template name",
                "tenant": "Please select tenant"
            },
            "noPagesAvailable": "No pages available",
            "noPageGroupsAvailable": "No page groups available",
            "noPageMenuItemsSelected": "No page menu items selected",
            "removePage": "Remove page",
            "reorderPage": "Reorder page",
            "roles": "Roles",
            "selectedItems": "Selected page menu items",
            "templateName": "Template name",
            "tenants": "Tenants",
            "update": "Update",
            "updateHeader": "Update template {{templateName}}"
        },
        "pageManagement": {
            "breadcrumb": "Template management",
            "cancel": "Cancel",
            "cantDelete": "Page is used by the templates and cannot be deleted",
            "drillDownWarning": "Drill down action is not available in the template management",
            "editHeader": "Page management",
            "exit": "Exit",
            "invalidWidgets": "Page template contains invalid widgets definitions: {{widgetsList}}",
            "pageNamePlaceholder": "You must fill a page name",
            "previewHeader": "Page preview",
            "removeConfirm": "Are you sure to remove this page?",
            "save": "Save",
            "notUsedByTemplate": "Page not used by any template",
            "notUsedByGroup": "Page not used by any page group",
            "table": {
                "pageID": "Page id",
                "pageName": "Page name",
                "icon": "Icon",
                "templates": "Templates",
                "pageGroups": "Page groups",
                "updatedAt": "Updated at",
                "updatedBy": "Updated by"
            }
        },
        "pageGroupManagement": {
            "notUsed": "Page group not used by any template",
            "removeConfirm": "Are you sure to remove this page group?",
            "removePageConfirm": "Are you sure to remove this page from the page group?",
            "createPageGroup": "Create page group",
            "table": {
                "groupId": "Group id",
                "groupName": "Group name",
                "icon": "Icon",
                "pages": "Pages",
                "templates": "Templates",
                "updatedAt": "Updated at",
                "updatedBy": "Updated by"
            },
            "modal": {
                "addPage": "Add page",
                "availablePages": "Available pages",
                "createHeader": "Create page group",
                "groupName": "Group name",
                "icon": "Group icon",
                "noPagesAvailable": "No pages available",
                "noPagesSelected": "No pages selected",
                "selectedPages": "Selected pages",
                "submitCreate": "Create",
                "submitUpdate": "Update",
                "updateHeader": "Update page group {{pageGroupName}}",
                "errors": {
                    "selectedPages": "Please select at least one page",
                    "groupName": "Please provide group name"
                }
            }
        },
        "templateManagement": {
            "addTemplateButton": "Create template",
            "pageMenuItemsList": {
                "header": "Page menu items",
                "noItems": "No page menu items available",
                "removeConfirm": "Are you sure to remove this page menu item from the template?"
            },
            "removeConfirm": "Are you sure to remove this template?",
            "roleList": {
                "noRoles": "No roles available",
                "removeConfirm": "Are you sure to remove this role from template?"
            },
            "table": {
                "roles": "Roles",
                "templateId": "Template id",
                "tenants": "Tenants",
                "updatedAt": "Updated at",
                "updatedBy": "Updated by"
            },
            "tenantsList": {
                "noTenants": "No tenants available",
                "removeConfirm": "Are you sure to remove this tenant from template?"
            }
        }
    },
    "users": {
        "changePassword": "Change Password",
        "changePasswordModal": {
            "change": "Change",
            "errors": {
                "noPassword": "Please provide user password",
                "noPasswordConfirmation": "Please provide password confirmation",
                "passwordsMismatch": "Passwords do not match"
            },
            "header": "Change password for {{username}}",
            "password": "Password",
            "passwordConfirm": "Confirm password"
        },
        "enterEditMode": "Edit Mode",
        "exitEditMode": "Exit Edit Mode",
        "licenseManagement": "License Management",
        "logout": "Logout",
        "resetTemplates": {
            "label": "Reset Templates",
            "title": "Reset application screens"
        },
        "templateManagement": "Template Management",
        "noTenants": "No Tenants",
        "tenantsHeader": "Tenant selection",
        "help": "Help",
        "health": "Health"
    },
    "widget": {
        "config": {
            "pollingTime": {
                "description": "Data of the widget will be refreshed per provided interval time in seconds",
                "name": "Refresh time interval",
                "placeholder": "Enter time interval in seconds"
            }
        },
        "detailedRenderError": "Error rendering widget: {{errorDetails}}",
        "fetchDataFunctionError": "Widget doesnt have a fetchData function",
        "fetchError": "Error fetching widget data",
        "loadError": "Cannot load widget {{widgetName}}. It might not be installed in your env. Please contact administrator.",
        "loading": "Loading...",
        "fetchingError": "Cannot fetch the widget data",
        "renderError": {
            "title": "Cannot render widget",
            "content": "For more details see the browser console"
        },
        "validationErrors": {
            "idNotSpecified": "Mandatory field - 'id' - not specified in widget definition.",
            "invalidPermission": "Specified widget permission ('{{permission}}') not found in available permissions list.",
            "multipleDefinitions": "Only single widget should be defined within widget.js",
            "multipleErrors": "Multiple errors occured: {{}}",
            "nameNotSpecified": "Mandatory field - 'name' - not specified in widget definition.",
            "noWidgetDefinition": "Widget not properly initialized. Please check if widget.js is correctly defined."
        }
    },
    "widgets": {
        "common": {
            "deployments": {
                "actionsMenu": {
                    "install": "Install",
                    "update": "Update",
                    "setSite": "Set Site",
                    "manageLabels": "Manage Labels",
                    "uninstall": "Uninstall",
                    "delete": "Delete",
                    "forceDelete": "Force Delete",
                    "fetchError": "Cannot fetch deployment '{{ deploymentId }}'.",
                    "tooltip": "Deployment action"
                },
                "workflowsMenu": {
                    "tooltip": "Execute workflow"
                },
                "execute": {
                    "header": {
                        "noDeployment": "Execute workflow {{workflowName}}",
                        "singleDeployment": "Execute workflow {{workflowName}} on {{deploymentId}}",
                        "multipleDeployments": "Execute workflow {{workflowName}} on multiple deployments"
                    },
                    "errors": {
                        "missingDeployment": "Missing deployment.",
                        "missingWorkflow": "Missing workflow.",
                        "workflowError": "Workflow '{{ workflowName }}' does not exist for deployment '{{ deploymentNameAndId }}'.",
                        "scheduleTimeError": "Please provide valid scheduled time (in the future, using format: YYYY-MM-DD HH:mm)",
                        "yamlFileError": "Loading values from YAML file failed: {{errorMessage}}"
                    },
                    "paramsHeader": "Parameters",
                    "noParams": "No parameters available for the execution",
                    "execute": "Execute",
                    "actionsHeader": "Actions",
                    "actions": {
                        "force": {
                            "label": "Force",
                            "help": "Execute the workflow even if there is an ongoing execution for the given deployment. You cannot use this option with \"Queue\"."
                        },
                        "dryRun": {
                            "label": "Dry run",
                            "help": "If set, no actual operations will be performed. Executed tasks will be logged without side effects. You cannot use this option with \"Queue\"."
                        },
                        "queue": {
                            "label": "Queue",
                            "help": "If set, executions that can`t currently run will be queued and run automatically when possible. You cannot use this option with \"Force\" and \"Dry run\"."
                        },
                        "schedule": {
                            "label": "Schedule",
                            "help": "If set, workflow will be executed at specific time (local timezone) provided below. You cannot use this option with \"Queue\"."
                        }
                    }
                },
                "removeModal": {
                    "deleteDescription": "Are you sure you want to remove deployment {{ deploymentName }}?",
                    "forceDeleteDescription": "Force delete will ignore any existing live nodes, or existing deployments which depend on this deployment.\nIt's recommended to first run uninstall to stop the live nodes, and make sure there are no running installations which depend on this deployment - and then run delete.\nAre you sure you want to ignore the live nodes and delete the deployment {{ deploymentName }}?"
                },
                "setSiteModal": {
                    "header": "Set the site of deployment {{ deploymentName }}",
                    "siteNameLabel": "Site name",
                    "detachSiteLabel": "Detach from the current site",
                    "updateButton": "Update"
                },
                "secretsModal": {
                    "header": "Add secrets",
                    "buttons": {
                        "add": "Add"
                    },
                    "errors": {
                        "noSecretValues": "Please provide values for secrets"
                    },
                    "placeholder": "Secret value",
                    "checkboxLabel": "Multiline"
                },
                "deployModal": {
                    "header": "Deploy blueprint {{blueprintId}}",
                    "inputs": {
                        "deploymentId": {
                            "label": "Deployment ID",
                            "help": "Specify an ID for this deployment instance."
                        },
                        "deploymentName": {
                            "label": "Deployment name",
                            "help": "Specify a name for this deployment instance."
                        },
                        "blueprintName": {
                            "label": "Blueprint",
                            "help": "Select the blueprint based on which this deployment will be created."
                        },
                        "siteName": {
                            "label": "Site name",
                            "help": "Specify a site to which this deployment will be assigned."
                        },
                        "labels": {
                            "label": "Labels"
                        },
                        "skipPluginsValidation": {
                            "label": "Skip plugins validation",
                            "message": "The recommended path is uploading plugins as wagons. This option is designed for plugin development and advanced users only."
                        },
                        "runtimeOnlyEvaluation": {
                            "label": "Runtime only evaluation",
                            "help": "If set, then get_property and get_input intrinsic functions will be evaluated on demand at runtime. If not set, then evaluation will be done at deployment creation time."
                        },
                        "deploymentInputs": {
                            "loading": "Loading inputs...",
                            "noInputs": "No inputs available for the blueprint"
                        }
                    },
                    "sections": {
                        "deploymentInputs": "Deployment Inputs",
                        "deploymentMetadata": "Deployment Metadata",
                        "executionParameters": "Execution Parameters",
                        "advanced": "Advanced",
                        "install": "Install"
                    },
                    "buttons": {
                        "showDataTypes": "Show Data Types",
                        "addMissingSecrets": "Add Missing Secrets",
                        "deploy": "Deploy",
                        "install": "Install",
                        "deployAndInstall": "Deploy & Install"
                    },
                    "steps": {
                        "deploy": {
                            "validatingData": "1/2: Validating data...",
                            "deployingBlueprint": "2/2: Deploying blueprint..."
                        },
                        "deployAndInstall": {
                            "validatingData": "1/4: Validating data...",
                            "deployingBlueprint": "2/4: Deploying blueprint...",
                            "waitingForDeployment": "3/4: Creating deployment environment...",
                            "installingDeployment": "4/4: Installing deployment..."
                        }
                    },
                    "errors": {
                        "loadingYamlFileFailed": "Loading values from YAML file failed: {{ reason }}",
                        "noBlueprintName": "Please select blueprint from the list",
                        "noDeploymentName": "Please provide deployment name",
                        "noDeploymentId": "Please provide deployment ID",
                        "missingSecretsHeading": "Missing Secrets Error",
                        "missingSecrets": "The following required secrets are missing in this tenant:",
                        "deploymentCreationFailed": "Deployment {{ deploymentName }} environment creation failed. {{ error }}",
                        "deploymentInstallationFailed": "Deployment {{ deploymentName }} installation failed: {{ error }}"
                    }
                }
            },
            "labels": {
                "addButton": "Add",
                "keyPlaceholder": "Select or type in a key",
                "newKey": "New key",
                "newValue": "New value",
                "valuePlaceholder": "Select or type in a value",
                "keyValidationError": "Only letters, digits and the characters \"-\", \".\" and \"_\" are allowed.",
                "valueValidationError": "The \" character and control characters are not allowed.",
                "invalidKeyError": "All labels starting with `{{ keyPrefix }}` are reserved for internal usage and should not be used unless there is a need to override the default functionality. The system will prevent overdoing labels that can sacrifice consistency. List of reserved lables: {{ reservedKeys }}.",
                "input": {
                    "label": "Labels",
                    "help": "A list of labels - key-value pairs - that can be assigned with a deployment"
                },
                "fetchingLabelsError": "Cannot fetch labels for deployment '{{deploymentId}}'",
                "labelDuplicationError": "Cannot add the same label twice",
                "modalHeader": "Manage labels for deployment {{ deploymentNameAndId }}",
                "modalApplyButton": "Apply"
            },
            "filters": {
                "form": {
                    "buttons": {
                        "addRule": "Add new rule",
                        "removeRule": "Remove rule"
                    },
                    "inputsPlaceholders": {
                        "blueprintId": "Select or type in blueprints",
                        "createdBy": "Select or type in usernames",
                        "displayName": "Select or type in display names",
                        "siteName": "Select or type in site names",
                        "tenantName": "Select or type in tenant names",
                        "installationStatus": "Select or type in installation status",
                        "multipleStrings": "Type in values"
                    },
                    "ruleTypesLabels": {
                        "blueprintId": "Blueprint",
                        "createdBy": "Creator",
                        "displayName": "Display name",
                        "siteName": "Site name",
                        "tenantName": "Tenant name",
                        "installationStatus": "Installation status",
                        "label": "Label"
                    },
                    "operatorsLabels": {
                        "anyOf": "is one of",
                        "notAnyOf": "is not one of",
                        "isNot": "is not one of (or no such key)",
                        "isNull": "key is not",
                        "isNotNull": "key is",
                        "contains": "contains",
                        "notContains": "does not contain",
                        "startsWith": "starts with",
                        "endsWith": "ends with"
                    }
                }
            },
            "readmes": {
                "linksBasePath": "https://docs.cloudify.co/staging/dev",
                "params": {
                    "cfy_composer_link": "/developer/composer/",
                    "cfy_composer_name": "Cloudify Composer",
                    "cfy_console_name": "Cloudify Management Console",
                    "cfy_manager_name": "Cloudify Manager",
                    "cfy_spire_name": "Cloudify Spire",
                    "mgr_premium_title": "Cloudify Premium Manager",
                    "product_name": "Cloudify"
                },
                "noReadme": "No README available",
                "loading": "Loading..."
            },
            "revertToDefault": "Revert to default value",
            "urls": {
                "blueprintsCatalog": "https://repository.cloudifysource.org/cloudify/blueprints/6.4/getting_started.json",
                "helloWorldBlueprint": "https://github.com/cloudify-cosmo/cloudify-hello-world-example/archive/master.zip",
                "linkParameterExample": "https://cloudify.co"
            },
            "noDataMessage": {
                "invalidUrl": "The widget content cannot be displayed because configured URL does not point to a valid {{repositoryName}} repository JSON data. Please check widget's configuration.",
                "noConnection": "The widget content cannot be displayed because there is no connection to {{repositoryName}} repository. Please check network connection and widget's configuration."
            },
            "blueprintUpload": {
                "uploadLabels": {
                    "pending": "1/5: Waiting for blueprint upload to start...",
                    "uploading": "2/5: Uploading blueprint...",
                    "extracting": "3/5: Extracting blueprint...",
                    "parsing": "4/5: Parsing blueprint...",
                    "uploadingImage": "5/5: Uploading image..."
                },
                "modal": {
                    "header": "Upload blueprint",
                    "uploadButton": "Upload"
                },
                "errorHeaders": {
                    "failedUploading": "Blueprint upload failed",
                    "failedExtracting": "Blueprint extraction failed",
                    "failedParsing": "Blueprint parsing failed"
                },
                "validationErrors": {
                    "invalidBlueprintUrl": "Please provide valid URL for blueprint package",
                    "invalidImageUrl": "Please provide valid URL for blueprint icon",
                    "noBlueprintPackage": "Please select blueprint package",
                    "noBlueprintName": "Please provide blueprint name",
                    "noBlueprintYamlFile": "Please provide blueprint YAML file"
                },
                "inputs": {
                    "blueprintName": {
                        "label": "Blueprint name",
                        "help": "The package will be uploaded to the Manager as a Blueprint resource, under the name you specify here."
                    },
                    "blueprintYamlFile": {
                        "label": "Blueprint YAML file",
                        "help": "If you choose archive as blueprint package, you must specify the blueprint YAML file for your environment, because the archive can contain more than one YAML file."
                    },
                    "blueprintPackage": {
                        "label": "Blueprint package",
                        "help": "You can provide single YAML file or blueprint archive. Supported types are: yml, yaml, zip, tar, tar.gz and tar.bz2. The archive package must contain exactly one directory that includes at least one YAML file.",
                        "placeholder": "Provide the blueprint's URL or click browse to select a file"
                    },
                    "blueprintIcon": {
                        "help": "(Optional) The blueprint icon file is shown with the blueprint in the local blueprint widget.",
                        "placeholder": "Provide the image file URL or click browse to select a file"
                    }
                },
                "actionsMenu": {
                    "uploadButton": "Upload",
                    "uploadFromMarketplace": "Upload from Marketplace",
                    "uploadFromPackage": "Upload a blueprint package",
                    "uploadFromTerraformTemplate": "Upload from Terraform module",
                    "generateInComposer": "Generate in the Composer"
                }
            },
            "executions": {
                "noErrorDetails": "No error details available"
            },
            "rolesPicker": {
                "label": "Choose a role for {{resourceName}} {{resource}}:",
                "placeholder": "Choose a role"
            }
        },
        "agents": {
            "columns": {
                "id": "ID",
                "ip": "IP",
                "deployment": "Deployment",
                "node": "Node",
                "system": "System",
                "version": "Version",
                "installMethod": "Install method",
                "actions": "Actions"
            }
        },
        "blueprintActionButtons": {
            "name": "Blueprint action buttons",
            "description": "Provides set of action buttons for blueprint",
            "configuration": {
                "showEditCopyInComposerButton": "Show the \"Edit a copy in Composer\" button"
            },
            "buttons": {
                "createDeployment": "Create deployment",
                "deleteBlueprint": "Delete blueprint",
                "downloadBlueprint": "Download blueprint",
                "editCopy": "Edit a copy in Composer"
            }
        },
        "blueprints": {
            "configuration": {
                "fieldsToShow": {
                    "label": "List of fields to show",
                    "placeholder": "Select fields from the list",
                    "items": {
                        "Created": "Created",
                        "Updated": "Updated",
                        "Creator": "Creator",
                        "State": "State",
                        "Deployments": "Deployments"
                    }
                },
                "clickToDrillDown": "Enable click to drill down",
                "displayStyle": {
                    "label": "Display style",
                    "items": {
                        "table": "Table",
                        "catalog": "Catalog"
                    }
                },
                "hideFailedBlueprints": "Hide failed blueprints",
                "showComposerOptions": "Show Composer options",
                "labelFilterRules": "Label filter rules"
            },
            "terraformModal": {
                "header": "Create blueprint from Terraform",
                "submit": "Create",
                "blueprintName": "Blueprint name",
                "blueprintDescription": "Blueprint description",
                "terraformVersion": "Terraform version",
                "terraformModuleDetails": "Terraform module details",
                "template": "Terraform module source (ZIP archive URL, Git repository URL or local ZIP archive)",
                "resourceLocation": "Terraform module folder",
                "urlAuthentication": "URL authentication",
                "username": "Username",
                "password": "Password",
                "mapping": "Terraform variables and outputs mapping",
                "variables": "Variables",
                "environment": "Environment variables",
                "outputs": "Outputs",
                "variablesTable": {
                    "variable": "Variable",
                    "source": "Source",
                    "name": "Name",
                    "value": "Value",
                    "sources": {
                        "secret": "Secret",
                        "input": "Input",
                        "static": "Static"
                    },
                    "newSecretPrefix": "[new]"
                },
                "outputsTable": {
                    "name": "Output",
                    "type": "Output type",
                    "terraformOutput": "Terraform output",
                    "types": {
                        "output": "Output",
                        "capability": "Capability"
                    }
                },
                "progress": {
                    "generation": "1/2: Generating Terraform blueprint...",
                    "upload": "2/2: Uploading Terraform blueprint..."
                },
                "cancelConfirm": "Are you sure to close the modal and discard provided Terraform data?",
                "assignOutputsVariablesConfirm": "In the selected Terraform module the following parameters were detected\n- {{variablesAmount}} Variables\n- {{outputAmount}} Outputs\nWould you like to define the detected variables and outputs in the blueprint?",
                "default": "Default",
                "errors": {
                    "noBlueprintName": "Please provide blueprint name",
                    "noTerraformTemplate": "Please provide Terraform template URL",
                    "terraformTemplateUnauthorized": "The URL requires authentication",
                    "noUsername": "Please provide username",
                    "noPassword": "Please provide password",
                    "noResourceLocation": "Please provide resource location",
                    "invalidBlueprintName": "Please provide valid blueprint name. It should start with a letter and contain only letters, digits and the following characters: \"-\", \".\" and \"_\".",
                    "invalidBlueprintDescription": "Please provide valid blueprint description. It should contain only ASCII characters.",
                    "invalidTerraformTemplate": "Please provide valid Terraform template URL",
                    "blueprintNameInUse": "Blueprint '{{blueprintName}}' already exists",
                    "variables": {
                        "keyMissing": "Please provide variable key",
                        "keyInvalid": "Please provide valid variable key. It should contain only letters, digits and the following characters: \"-\", \".\" and \"_\".",
                        "keyDuplicated": "Variable keys must be unique, duplicates are not allowed",
                        "sourceMissing": "Please provide variable source",
                        "nameMissing": "Please provide variable name",
                        "nameInvalid": "Please provide valid variable name. It should start with a letter and contain only letters, digits and the characters \"-\", \".\" and \"_\"."
                    },
                    "environmentVariables": {
                        "keyMissing": "Please provide environment variable key",
                        "keyInvalid": "Please provide valid environment variable key. It should contain only letters, digits and the following characters \"-\", \".\" and \"_\".",
                        "keyDuplicated": "Environment variable keys must be unique, duplicates are not allowed",
                        "sourceMissing": "Please provide environment variable source",
                        "nameMissing": "Please provide environment variable name",
                        "nameInvalid": "Please provide valid environment variable name. It should start with a letter and contain only letters, digits and the characters \"-\", \".\" and \"_\"."
                    },
                    "outputs": {
                        "keyMissing": "Please provide output name",
                        "keyInvalid": "Please provide valid output name. It should contain only letters, digits and the following characters \"-\", \".\" and \"_\".",
                        "keyDuplicated": "Outputs must be unique, duplicates are not allowed",
                        "typeMissing": "Please provide output type",
                        "outputMissing": "Please provide Terraform output",
                        "outputInvalid": "Please provide valid Terraform output - only letters, digits and the characters \"-\", \".\" and \"_\" are allowed"
                    }
                }
            }
        },
        "blueprintCatalog": {
            "name": "Blueprints Catalog",
            "description": "Shows blueprints catalog",
            "actions": {
                "openDocumentation": "Open documentation",
                "uploadBlueprint": "Upload blueprint"
            },
            "configuration": {
                "jsonPath": {
                    "label": "Blueprints Examples URL",
                    "placeholder": "Type URL to blueprint examples JSON file",
                    "description": "If set, then GitHub options are not used for fetching data."
                },
                "username": {
                    "label": "GitHub User",
                    "placeholder": "Type GitHub's user or organization name",
                    "description": "GitHub user or organization account name which is the owner of the repositories to fetch. Used only if Blueprints Examples URL is not set."
                },
                "filter": {
                    "label": "GitHub Filter",
                    "placeholder": "Type filter for GitHub repositories",
                    "description": "Optional filter for GitHub repositories. See GitHub's web page 'Searching repositories' for more details. Used only if Blueprints Examples URL is not set."
                },
                "displayStyle": {
                    "label": "Display style",
                    "option": {
                        "table": "Table",
                        "catalog": "Catalog"
                    }
                },
                "fieldsToShow": {
                    "label": "List of fields to show",
                    "placeholder": "Select fields from the list",
                    "items": {
                        "name": "Name",
                        "description": "Description",
                        "created": "Created",
                        "updated": "Updated"
                    }
                },
                "sortByName": {
                    "label": "Sort by name",
                    "description": "If set to true, then blueprints will be sorted by name."
                }
            },
            "authenticationWarning": "No GitHub credentials provided! Widget may stop working after reaching unrestricted query limit (~50). Fix this by adding &github-username& and &github-password& entries to your secrets store (Secrets widget).",
            "uploadingMessage": {
                "uploading": "Uploading '{{blueprintName}}' blueprint...",
                "redirection": "Once the blueprint is uploaded, you'll be redirected to the blueprint deployment page."
            },
            "noDataMessage": "There are no Blueprints available in catalog. Check widget's configuration.",
            "catalog": {
                "properties": {
                    "created": "Created",
                    "updated": "Updated"
                }
            }
        },
        "buttonLink": {
            "name": "Button link",
            "description": "Opens provided URL",
            "configuration": {
                "basic": {
                    "name": "Basic button",
                    "description": "A basic button is less pronounced"
                },
                "color": {
                    "name": "Color",
                    "description": "Color of the button",
                    "default": "green"
                },
                "fullHeight": {
                    "name": "Full height",
                    "description": "Should the button use full height reserved for the widget"
                },
                "icon": {
                    "name": "Icon",
                    "description": "Icon displayed on the button",
                    "default": "external"
                },
                "label": {
                    "name": "Label",
                    "description": "Label displayed on the button",
                    "default": "Button Link"
                },
                "url": {
                    "name": "URL address",
                    "description": "Page URL address to open on button click. If URL starts with 'http', then page will be opened in a new window/tab. In other case it will be opened in the same window.",
                    "default": ""
                }
            }
        },
        "cloudNum": {
            "name": "Number of clouds",
            "description": "Displays number of cloud environments fully configured",
            "configuration": {
                "icon": {
                    "name": "Icon",
                    "description": "Icon displayed on the left side of the cloud environments count"
                },
                "imageSrc": {
                    "name": "Image URL",
                    "description": "URL of the image displayed on the left side of the cloud environments count"
                }
            }
        },
        "deploymentNum": {
            "name": "Number of deployments",
            "description": "Displays number of filtered deployments along with icon and label",
            "configuration": {
                "label": {
                    "name": "Label",
                    "description": "Label displayed under deployments count"
                },
                "icon": {
                    "name": "Icon",
                    "description": "Icon displayed on the left side of the deployments count"
                },
                "imageSrc": {
                    "name": "Image URL",
                    "description": "URL of the image displayed on the left side of the deployments count"
                },
                "filterId": {
                    "name": "Filter ID",
                    "description": "Name of the saved filter to apply on deployments"
                },
                "page": {
                    "name": "Page to open on click",
                    "description": "Page to open when user clicks on the widget content"
                }
            }
        },
        "deploymentsView": {
            "name": "Deployments view",
            "description": "A complete deployments view – Deployment list, map view, and detailed deployment info",
            "configuration": {
                "filterId": {
                    "name": "Name of the saved filter to apply"
                },
                "filterByParentDeployment": {
                    "name": "Filter by parent deployment",
                    "description": "Only show deployments directly attached to the deployment selected on the previous page (when in drill-down)."
                },
                "fieldsToShow": {
                    "name": "List of fields to show in the table",
                    "placeholder": "Select fields from the list"
                },
                "mapOpenByDefault": {
                    "name": "Show map by default"
                },
                "mapHeight": {
                    "name": "Map height",
                    "description": "The height of the map in pixels"
                },
                "pageSize": {
                    "name": "Number of items to show at once in the table"
                }
            },
            "header": {
                "map": {
                    "label": "Map",
                    "openMap": "Open map",
                    "closeMap": "Close map"
                },
                "filter": {
                    "button": "Filter",
                    "clearButton": "Clear selected filter",
                    "unsavedFilter": "Unsaved filter",
                    "modal": {
                        "header": "Select a filter",
                        "submit": "Apply",
                        "save": "Save",
                        "saveAs": "Save as...",
                        "saveNew": "Save new filter",
                        "cancel": "Cancel",
                        "filterIdPlaceholder": "Enter new filter ID...",
                        "noFilterError": "Please select a filter or specify filter rules",
                        "noFilterRulesError": "Please specify filter rules",
                        "filterRulesInvalidError": "Please provide all the values in filter rules section",
                        "filterIdMissingError": "Please specify a new filter ID",
                        "filterId": "Filter ID",
                        "filterRules": "Filter rules"
                    }
                },
                "bulkActions": {
                    "button": "Bulk Actions",
                    "deployOn": {
                        "title": "Deploy On",
                        "modal": {
                            "header": "Deploy on",
                            "inputs": {
                                "name": {
                                    "label": "Name suffix",
                                    "help": "Specify a text which will be appended to each deployment name"
                                }
                            },
                            "steps": {
                                "validatingData": "1/4: Validating data...",
                                "fetchingEnvironments": "2/4: Fetching environments list...",
                                "creatingDeployments": "3/4: Creating deployments...",
                                "installingDeployments": "4/4: Installing deployments..."
                            },
                            "executionStarted": "Group execution started"
                        }
                    },
                    "runWorkflow": {
                        "title": "Run Workflow",
                        "modal": {
                            "header": "Run workflow on filtered deployments",
                            "inputs": {
                                "workflowId": {
                                    "label": "Workflow",
                                    "help": "Name of the workflow to be started on the filtered deployments. Only workflows without mandatory parameters are listed."
                                }
                            },
                            "buttons": {
                                "run": "Run",
                                "close": "Close"
                            },
                            "messages": {
                                "limitations": "The workflow will run with default parameters and without any special workflow flags such as 'Force', 'Dry run' or 'Queue'.",
                                "executionGroupStarted": "Workflow has been started.",
                                "fetchingWorkflows": "Fetching workflows...",
                                "creatingDeploymentGroup": "1/2: Creating deployment group...",
                                "startingExecutionGroup": "2/2: Starting execution group..."
                            },
                            "errors": {
                                "noWorkflowError": "Please select a workflow",
                                "workflowsFetchFailed": "Error occurred when fetching workflows"
                            }
                        }
                    },
                    "common": {
                        "executionStartedModal": {
                            "header": "Group execution started",
                            "message": "Click on 'Go to Executions page' button to track the progress",
                            "buttons": {
                                "goToExecutionsPage": "Go to Executions page",
                                "close": "Close"
                            }
                        }
                    }
                }
            },
            "iconLabels": {
                "inProgress": "In progress",
                "requiresAttention": "Requires attention"
            },
            "columns": {
                "status": {
                    "name": "Status"
                },
                "id": {
                    "name": "ID"
                },
                "name": {
                    "name": "Name"
                },
                "blueprintName": {
                    "name": "Blueprint name"
                },
                "environmentType": {
                    "name": "Environment type"
                },
                "location": {
                    "name": "Location"
                },
                "subenvironmentsCount": {
                    "name": "Subenvironments",
                    "tooltip": "Sub-environments (Total)"
                },
                "subservicesCount": {
                    "name": "Subservices",
                    "tooltip": "Services (Total)"
                }
            },
            "map": {
                "loadingSites": "Loading sites",
                "errorLoadingSites": "Error loading sites",
                "tooltip": {
                    "status": {
                        "good": "Good",
                        "inProgress": "In progress",
                        "requiresAttention": "Requires attention"
                    }
                }
            },
            "drillDown": {
                "name": "Deployments view (drilled-down)",
                "description": "A complete deployments view in a drilled-down context – Deployment list, map view, and detailed deployment info",
                "breadcrumbs": {
                    "environments": "Environments",
                    "services": "Services"
                },
                "buttons": {
                    "detailsFetchingError": "Could not fetch deployment details",
                    "details": {
                        "label": "Details",
                        "title": "Drill down to deployment details"
                    },
                    "parent": {
                        "label": "Parent",
                        "title": "Go to parent deployment"
                    },
                    "environments": {
                        "label": "Subenvironments",
                        "title": "Drill down to subenvironments"
                    },
                    "services": {
                        "label": "Services",
                        "title": "Drill down to subservices"
                    }
                }
            },
            "messages": {
                "noData": "No Results Found. Try changing the filter's parameters",
                "noDataImageAlt": "Empty box",
                "loadingFilterRules": "Loading filter rules",
                "errorLoadingFilterRules": "Error when loading filter rules",
                "loadingDeployments": "Loading deployments",
                "errorLoadingDeployments": "Error when loading deployments",
                "missingParentDeploymentId": {
                    "header": "Cannot filter by parent deployment",
                    "message": "A selected deployment cannot be found in the parent page. Turn off the option in the configuration."
                },
                "missingFilterRules": {
                    "header": "Internal error occurred",
                    "message": "Try going to the home page and drill down again."
                },
                "unexpectedWidgetUsage": {
                    "header": "Unexpected widget usage",
                    "message": "The drilled-down widget should not be used on a top-level page, only in drill-down pages. Most of the time you do not need to add it manually, as it is present on the drill-down Environments/Services page automatically. You may be looking for a regular Deployments View widget."
                }
            }
        },
        "events": {
            "name": "Events/logs",
            "description": "This widget shows events/logs",
            "configuration": {
                "fieldsToShow": {
                    "name": "List of fields to show in the table",
                    "placeholder": "Select fields from the list",
                    "items": {
                        "icon": "Icon",
                        "timestamp": "Timestamp",
                        "type": "Type",
                        "blueprint": "Blueprint",
                        "deployment": "Deployment",
                        "deploymentId": "Deployment ID",
                        "workflow": "Workflow",
                        "operation": "Operation",
                        "nodeId": "Node ID",
                        "nodeInstanceId": "Node instance ID",
                        "message": "Message"
                    }
                },
                "colorLogs": {
                    "name": "Color message based on type"
                },
                "maxMessageLength": {
                    "name": "Maximum message length before truncation"
                }
            },
            "detailsIcon": "Show details",
            "detailsModal": {
                "header": "Details",
                "message": "Message",
                "copyMessage": "Copy message",
                "errorCause": "Error Cause #{{causeNo}}",
                "singleErrorCause": "Error Cause",
                "type": "Type",
                "traceback": "Traceback",
                "copyCauses": "Copy Error Causes",
                "close": "Close"
            },
            "columns": {
                "timestamp": "Timestamp",
                "type": "Type",
                "blueprint": "Blueprint",
                "deployment": "Deployment",
                "deploymentId": "Deployment ID",
                "nodeId": "Node ID",
                "nodeInstanceId": "Node instance ID",
                "workflow": "Workflow",
                "operation": "Operation",
                "message": "Message"
            }
        },
        "executions": {
            "name": "Executions",
            "description": "This widget shows the deployment executions",
            "configuration": {
                "fieldsToShow": {
                    "name": "List of fields to show in the table"
                },
                "showSystemExecutions": {
                    "name": "Show system executions"
                },
                "singleExecutionView": {
                    "name": "Show most recent execution only"
                }
            },
            "noExecutionFound": "There are no executions that could be shown.",
            "invalidConfigurationError": "Deployment ID must be selected when \"Show most recent execution only\" configuration option is turned on."
        },
        "maintenanceModeButton": {
            "activating": "Maintenance Mode is being activated"
        },
        "pluginsCatalog": {
            "name": "Plugins Catalog",
            "description": "Shows plugins catalog",
            "configuration": {
                "jsonPath": {
                    "name": "Plugins Catalog JSON Source",
                    "placeholder": "Type JSON Path"
                },
                "sortByName": {
                    "name": "Sort by name",
                    "description": "If set to true, then plugins will be sorted by name."
                }
            },
            "uploadButton": {
                "enabled": "Upload plugin",
                "disabled": "Latest version is already uploaded",
                "uploading": "Plugin upload in progress"
            },
            "uploadAllButton": "Upload all plugins",
            "noData": "There are no Plugins available in catalog. Check widget's configuration.",
            "columns": {
                "name": "Name",
                "description": "Description",
                "version": "Version",
                "uploadedVersion": "Uploaded version"
            },
            "successMessage": "{{pluginTitle}} successfully uploaded"
        },
        "plugins": {
            "upload": {
                "button": "Upload",
                "marketplace": "Upload from Marketplace",
                "package": "Upload a package",
                "close": "Close",
                "catalog": "Plugins Catalog"
            },
            "columns": {
                "plugin": "Plugin",
                "packageName": "Package name",
                "packageVersion": "Package version",
                "supportedPlatform": "Supported platform",
                "distribution": "Distribution",
                "distributionRelease": "Distribution release",
                "uploadedAt": "Uploaded at",
                "creator": "Creator"
            },
            "noData": "There are no Plugins available. Click \"Upload\" to add Plugins.",
            "deleteError": "Something went wrong, no plugin was selected for delete",
            "download": "Download",
            "delete": "Delete",
            "deleteLabel": "plugin {{name}} v{{version}}"
        },
        "secrets": {
            "columns": {
                "key": "Key",
                "value": "Value",
                "hiddenValue": "Hidden value",
                "created": "Created",
                "updated": "Updated",
                "creator": "Creator",
                "tenant": "Tenant"
            }
        },
        "serviceButton": {
            "name": "Service button",
            "description": "Displays button allowing to create a new service",
            "configuration": {
                "basic": {
                    "name": "Basic button",
                    "description": "A basic button is less pronounced"
                },
                "color": {
                    "name": "Color",
                    "description": "Color of the button"
                },
                "label": {
                    "name": "Label",
                    "description": "Label displayed on the button",
                    "default": "Create a service"
                },
                "icon": {
                    "name": "Icon",
                    "description": "Icon displayed on the button",
                    "default": "add"
                },
                "defaultMarketplaceTab": {
                    "name": "Default marketplace tab",
                    "description": "Name of the initially activated tab on Blueprint Marketplace page"
                }
            }
        },
        "deploymentButton": {
            "name": "Create deployment button",
            "description": "Adds button to create new deployment",
            "configuration": {
                "basic": {
                    "name": "Basic button",
                    "description": "A basic button is less pronounced"
                },
                "color": {
                    "name": "Color",
                    "description": "Color of the button"
                },
                "label": {
                    "name": "Label",
                    "description": "Label displayed on the button",
                    "default": "Create deployment"
                },
                "icon": {
                    "name": "Icon",
                    "description": "Icon displayed on the button"
                },
                "labelFilterRules": {
                    "name": "Blueprint label filter rules"
                }
            }
        },
        "userManagement": {
            "columns": {
                "username": "Username",
                "lastLoginAt": "Last login",
                "isAdmin": "Admin",
                "active": "Active",
                "showGettingStarted": "Getting started",
                "groupCount": "# Groups",
                "tenantCount": "# Tenants"
            }
        },
        "filters": {
            "name": "Filters",
            "description": "This widget shows a list of defined filters",
            "noFilters": "There are no filters defined",
            "add": "Add",
            "columns": {
                "name": "Filter name",
                "creator": "Creator",
                "created": "Created",
                "system": "System",
                "actions": {
                    "delete": "Delete filter",
                    "edit": "Edit filter",
                    "clone": "Clone filter",
                    "systemFilter": "System filter can't be edited or deleted"
                }
            },
            "modal": {
                "id": "Filter ID",
                "rules": "Filter rules",
                "errors": {
                    "idMissing": "Please provide the filter ID",
                    "filterRulesInvalid": "Please provide all the values in filter rules section"
                },
                "header": {
                    "add": "Add filter",
                    "edit": "Edit filter '{{filterId}}'",
                    "clone": "Clone filter '{{filterId}}'"
                }
            },
            "deleteConfirm": "Are you sure you want to remove filter '{{filterId}}'?",
            "filterInUse": {
                "heading": "Filter '{{filterId}}' cannot be removed:",
                "usageInfo": "Used as default filter in '{{widgetName}}' widget in '{{pageName}}' page by user '{{username}}'"
            }
        },
        "labels": {
            "name": "Labels",
            "description": "This widget shows a list of defined labels",
            "columns": {
                "key": "Key",
                "value": "Value",
                "actions": {
                    "edit": "Edit label",
                    "delete": "Delete label"
                }
            },
            "noDeployment": "No deployment selected",
            "noLabels": "There are no Labels defined",
            "add": "Add",
            "export": "Export",
            "addHeader": "Add labels for deployment '{{deploymentNameAndId}}'",
            "revert": "Revert to initial value",
            "deleteConfirm": "Are you sure you want to remove label"
        },
        "userGroups": {
            "columns": {
                "groupName": "Group",
                "ldapGroup": "LDAP group",
                "admin": "Admin",
                "users": "# Users",
                "tenants": "# Tenants"
            },
            "noGroups": "There are no User Groups available. Click \"Add\" to add User Groups.",
            "confirm": {
                "deleteGroup": "Are you sure you want to remove group {{groupName}}?",
                "defaultGroup": "You have administrator privileges from the {{groupName}} group. Are you sure you want to remove administrator privileges from this group? You will be logged out of the system so the changes take effect."
            },
            "modals": {
                "user": {
                    "header": "Edit users for {{groupName}}",
                    "message": {
                        "header": "",
                        "content": "You are about to remove yourself from this. Your administrative privileges will be removed and you will be logged out of the system so the changes take . Are you sure you want to continue?"
                    },
                    "fields": {
                        "users": "Users"
                    },
                    "buttons": {
                        "cancel": "No",
                        "approve": "Yes"
                    }
                },
                "create": {
                    "header": "Add user group",
                    "fields": {
                        "groupName": "Group name",
                        "ldapGroup": "LDAP group name",
                        "admin": "Admin",
                        "tenants": "Tenants"
                    },
                    "validation": {
                        "groupName": "Please provide group name"
                    },
                    "buttons": {
                        "add": "Add"
                    }
                },
                "tenants": {
                    "header": "Edit tenants for {{groupName}}",
                    "fields": {
                        "tenants": "Tenants"
                    }
                }
            },
            "details": {
                "group": {
                    "segments": {
                        "users": {
                            "header": "Users",
                            "empty": "No users available"
                        },
                        "tenants": {
                            "header": "Tenants",
                            "empty": "No tenants available"
                        },
                        "confirm": {
                            "removeFromGroup": "You have administrator privileges from the '{{groupName}}' group. Are you sure you want to remove yourself from this group? You will be logged out of the system so the changes take effect."
                        }
                    }
                }
            },
            "menu": {
                "editGroupUsers": "Edit group's users",
                "editGroupTenants": "Edit group's tenants",
                "delete": "Delete"
            },
            "exceptions": {
                "unknownAction": "Internal error: Unknown action {{actionName}} cannot be handled."
            }
        },
        "executionsStatus": {
            "name": "Executions Statuses Graph",
            "description": "Shows the number of executions per status",
            "noExecutions": "There are no Executions available",
            "charts": {
                "tooltip": {
                    "label": "Number of executions"
                }
            }
        },
        "tenants": {
            "name": "Tenants management",
            "description": "This widget shows a list of available tenants, and allow managing them",
            "createModal": {
                "header": "Add tenant",
                "form": {
                    "errors": {
                        "emptyTenantName": "Please provide tenant name"
                    },
                    "buttons": {
                        "addTenant": "Add"
                    },
                    "fields": {
                        "tenantName": "Tenant name"
                    }
                }
            },
            "tenantsTable": {
                "noDataMessage": "There are no Tenants available. Click \"Add\" to add Tenants.",
                "columns": {
                    "name": "Name",
                    "groups": "# Groups",
                    "users": "# Users"
                },
                "errors": {
                    "unknownAction": "Internal error: Unknown action {{actionName}} cannot be handled."
                },
                "deleteModal": {
                    "content": "Are you sure you want to delete tenant {{tenantName}}?"
                }
            }
        },
        "deployments": {
            "name": "Blueprint deployments",
            "description": "Shows blueprint deployments list",
            "table": {
                "columns": {
                    "name": "Name",
                    "lastExecution": "Last execution",
                    "blueprint": "Blueprint",
                    "siteName": "Site Name",
                    "created": "Created",
                    "updated": "Updated",
                    "creator": "Creator"
                }
            },
            "list": {
                "noDeployments": "No results found."
            },
            "updatedIcon": {
                "header": "Deployment updated",
                "content": {
                    "description": "This deployment has been updated at least once since creation.",
                    "lastUpdate": "Last update was on: "
                }
            },
            "firstJourney": {
                "header": "No Deployments Yet",
                "buttons": {
                    "createDeployment": "Create new Deployment",
                    "uploadFromTerraform": "Upload from Terraform"
                }
            },
            "configuration": {
                "clickToDrillDown": {
                    "name": "Enable click to drill down"
                },
                "showExecutionStatusLabel": {
                    "name": "Show execution status label",
                    "description": "Show last execution workflow ID and status"
                },
                "showFirstUserJourneyButtons": {
                    "name": "Show first user journey buttons",
                    "description": "When there are no installed deployments, it will show a simplified view. View will contain buttons, which may be used to show Blueprint Marketplace or Create blueprint from Terraform modal"
                },
                "blueprintIdFilter": {
                    "name": "Blueprint ID to filter by",
                    "description": "Enter the blueprint id you wish to filter by"
                },
                "displayStyle": {
                    "name": "Display style"
                }
            }
        },
        "tokens": {
            "name": "Tokens",
            "configuration": {
                "showExpiredTokens": {
                    "name": "Show expired tokens",
                    "description": "Defines if expired tokens should be listed"
                }
            },
            "table": {
                "columns": {
                    "token": "Token",
                    "description": "Description",
                    "username": "Username",
                    "expirationDate": "Expiration date",
                    "lastUsed": "Last used"
                },
                "noTokens": "There are no Tokens available. Click \"Create\" to add tokens.",
                "buttons": {
                    "removeToken": "Delete token",
                    "create": "Create"
                }
            },
            "deleteModal": {
                "content": {
                    "withoutDescription": "Are you sure you want to delete the token with ID '{{tokenId}}'?",
                    "withDescription": "Are you sure you want to delete the token with ID '{{tokenId}}' and description '{{tokenDescription}}'?"
                }
            },
            "createModal": {
                "header": "Create token",
                "inputs": {
                    "description": "Description",
                    "expirationDate": "Expiration date"
                },
                "buttons": {
                    "cancel": "Cancel",
                    "create": "Create",
                    "close": "Close"
                },
                "newToken": {
                    "content": "New token has been created: {{token}}",
                    "warning": "You won't be able to show or copy the token value after closing this modal"
                },
                "errors": {
                    "createError": "Couldn't create a Token, please try to submit the Token data again.",
                    "expirationDateInvalidFormat": "Please provide a date in 'YYYY-MM-DD HH:mm' format",
                    "expirationDateInPast": "Please provide a date later than the current date"
                }
            }
        },
        "deploymentInfo": {
            "name": "Deployment Info",
            "description": "Shows deployment basic information and status",
            "configuration": {
                "showBlueprint": "Show blueprint name",
                "showSite": "Show site name",
                "showCreated": "Show created date",
                "showUpdated": "Show updated date",
                "showCreator": "Show creator",
                "showNodeInstances": "Show node instances status"
            },
            "noDeploymentSelected": "No deployment selected"
        }
    },
    "input": {
        "node_type": {
            "placeholder": "Select Node Type"
        },
        "node_instance": {
            "placeholder": "Select Node Instance"
        },
        "scaling_group": {
            "placeholder": "Select Node Scaling Group"
        },
        "deployment_id": {
            "placeholder": "Select Deployment"
        },
        "blueprint_id": {
            "placeholder": "Select Blueprint"
        },
        "capability_value": {
            "placeholder": "Select Capability"
        },
        "secret_key": {
            "placeholder": "Select Secret Key"
        },
        "node_id": {
            "placeholder": "Select Node Id"
        }
    }
}
