@import '~cloudify-ui-common/styles/colors';

body {
}

a:hover {
  text-decoration: underline !important;
  cursor: pointer;
}

.loadingSegment {
    height: 100%;
    z-index: 5 !important;
}

.dropDownText
{
  display: inline-block;
}

.sidebar-button{
  color: $white;
  padding: 15px;
}

.show-on-small-screen {
  @media (min-width: 992px) {
    display: none !important;
  }
}

.main {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 55px;
  overflow: auto;

  .sidebar {
    &.ui.left.menu{
      z-index: 100;
      top: 55px;
      height: calc(100% - 55px) !important;
      transition: all 500ms cubic-bezier(.55, 0, .1, 1);
      left: -200px;
      @media (min-width: 992px) {
        left: 0;
      }
      &.open{
        left: 0 !important;
      }
      .itemContainer {
        position: relative;
        &:before {
          background-color: $grey-normal;
          position: absolute;
          content: '';
          top: 0;
          left: 0;
          width: 100%;
          height: 1px;
        }
      }
      .item:before {
        background-color: $grey-normal;
      }
      .item.link:hover {
        text-decoration: none !important; // override semantic ui styles
      }
    }
  }

  .ui.left.menu.sidebar.editSideBar {
    height: calc(100% - 109px) !important;
  }

  .page {
    @media (min-width: 992px) {
      margin-left: 13rem;
    }
    $input-padding: 4.85px 9px !important;
    $input-left: -10px;
    .pageDescription {
      $font-size: 12px;
      opacity: 0.6;
      font-size: $font-size;
      padding-left: 0;

      &.editPlaceholder {
        font-style: italic;
      }

      input {
        padding: $input-padding;
        font-size: $font-size !important;
        font-weight: 700;
        width: 260px;
        margin-left: $input-left;
      }
    }
    .pageTitle {
      clear: both;
      line-height: 1.5;
      height: 18px;
      font-size: inherit;

      &.input {
        width: 230px;
      }

      input {
        font-weight: 700;
        font-size: 14px;
        position: absolute;
        left: $input-left;
        top: -4px;
        padding: $input-padding;
      }
    }
  }

  .ui.breadcrumb {
    width: 100%;
    .section:not(.active):not(.input) {
      cursor: pointer;
    }
    > * {
      vertical-align: bottom !important;
    }
  }
}

.ui.segment.addPageContainer {
  position:fixed;
  bottom: 0;
  width: 13rem;
  z-index:1;
  transition: all 500ms cubic-bezier(.55, 0, .1, 1);
  left: -200px;
  @media (min-width: 992px) {
    left: 0;
  }
  &.open{
    left: 0 !important;
  }
}

.grid-stack > .grid-stack-item.widget > .grid-stack-item-content {
  overflow-x: initial;
  overflow-y: initial;
}

.gridStackBottomSpace {
  height: 150px;
}

.react-grid-item.widget {
  z-index: auto !important;
}

.maximizeWidget .widget {
  display: none;

  &.maximize {
    display: block;
    width: auto !important;
    height: auto !important;
    transform: translate(0px, 0px) !important;
    position: fixed !important;
    top: 8rem !important;
    bottom: 1rem !important;
    left: 14rem !important;
    right: 1rem !important;
    outline: 0;

    .widget{
      display: block;
    }
  }
}

.pageMenuItem {
}

.pageRemoveButton {
    position: absolute;
    right : 5px;
    display:none;
    visibility: hidden;
    top: 40%;
}

.pageMenuItem:hover .pageRemoveButton {
  display:block;
  visibility: visible;
  text-decoration: none;
}

.pages {

  .ui-sortable-helper {
    background-color: rgba(255,255,255,0.4) !important;
  }

  .ui-sortable-placeholder {
    height: 40px !important;
  }

}

.react-grid-placeholder{
  background-color: $grey-normal !important;
  border: 2px dotted $grey-veryDark;
  border-radius: 2px;
}

.layout{
  &.isEditMode{
    background-color: $grey-veryLight;
    border: 1px solid $grey-light;
    border-radius: 5px;
  }

  &>.react-draggable{
    background-color: rgba(0,0,0,.04);
    border-radius: 2px;
  }
  &>.react-draggable-dragging{
    opacity: 0.3;
    filter: blur(1px);
  }

  .widgetItem{
    height: 100%;
  }

  .widgetWithoutContent{
    overflow: auto;
  }
}

.widget {
  --widget-buttons-whitespace: 5px;

  .headerless {
    --widget-buttons-whitespace: 0;
  }

  .widgetEditButtons, .widgetViewButtons {
    position: absolute;
    top: var(--widget-buttons-whitespace);
    right : var(--widget-buttons-whitespace);
    display: none;
    z-index: 5;

    a {
      color: inherit !important;
    }

    a:hover {
      text-decoration: none !important;
    }
  }

  .widgetViewButtons.alwaysOnTop {
    display: block;
  }

  &:hover {
    .widgetEditButtons, .widgetViewButtons{
      display: block;
    }

    .ui.basic.segment.borderOnHover {
      border: 1px solid rgba(34, 36, 38, 0.15);
    }
  }

  .row {
    cursor: pointer;

    .rowActions {
      white-space: nowrap;
//      visibility: hidden;
    }

    &:hover .rowActions{
//      visibility: visible;
    }


  }

  .ui.segment.widgetItem {
    &:not(.standalone) {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
    &.standalone {
      padding: 0;
    }

    .widgetName {
      padding-left: 0;
      padding-bottom: 0;
      margin-left: 0;
      font-size: inherit;
      color: inherit;

      input {
        font-weight: bold;
        padding: 0.5px 9px;
        position: relative;
        left: -10px;
        top: 2px;
      }
    }
  }

  .widgetContent {
    &:not(.standalone) {
      position: absolute;
      top: 35px;
      bottom: 15px;
      left: 0;
      right: 0;
      overflow: auto;
      padding: 15px;
    }

    &.noHeader {
      top: 0;
    }

    &.standalone.noHeader {
      // NOTE: margin so the help modal icon does appears to the side of the
      // widget, instead of on top
      margin-right: 15px;
    }

    &.noBorder {
      overflow: initial;
      padding: 0 !important;
    }
  }
}

.uploadSnapshot {
  float: right;
}

.createSnapshot {
  float: right;
}

.snapshotsButtons {
  position: relative;
  bottom: 5px;
}

// TODO need to calc it according to screen size
.editWidgetModal {
  max-height: none;
}

// TODO need to calc it according to screen size
.addWidgetModal {
  max-height: 600px;

  .widgetsList {
    height: 435px;
    overflow: auto;
    padding-top: 5px;
    .item{
      padding: 30px 10px;
      cursor: pointer;
      align-items: center;
      &:hover{
        background-color: $grey-light;
        border-radius: 5px;
      }
      .image{
        &>img{
          object-fit: contain;
          height: 80px !important;
          border-radius: 5px;
          background: $white;
          border: 1px dotted $grey-light;
          transition: all 500ms ease-in-out;
          &:hover{
            transform: scale(1.3);
            box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.75);
          }
        }
      }
    }
  }

  .widgetsList .selectWidgetButton {
    margin-right:10px !important;
  }

// Force it to be v-centered
  .addWidgetCheckbox {
    margin-left: 10px;
    margin-right: 20px;
    margin-top: auto;
    margin-bottom: auto;
    height: 20px;
  }
}

.loginContainer {
    margin: auto;
    width: 350px;
    height: 170px;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    input,
    input:placeholder-shown {
      margin: 0 50px !important;
      color: $white !important;
      background: rgba(255, 255, 255, 0.3) !important;
    }

    input:focus,
    input:placeholder-shown:focus {
      background: rgba(255, 255, 255, 0.6) !important;
    }

    input::placeholder {
      color: $white !important;
      opacity: 1 !important; /* Firefox */
    }

    button {
      display: block !important;
      margin: 30px auto !important;
      min-width: 50% !important;
      border-radius: 25px !important;
      color: $white !important;
    }
  }

.loginContainerExtended {
  height: 400px;
}

.manager {
  .icon.statusIcon {
    line-height: 18px;
    margin-right: 0;
    margin-left: 7px;
  }
}

table.servicesData {
  margin-left: auto !important;
  margin-right: auto !important;
}

table.servicesData button.refreshButton {
  width: auto !important;
}

.managerVersion {
  font-size: 0.8em;
}

.ui.menu:not(.vertical) .item.configPanel {
  flex-direction: row;
  align-items: flex-end;
}

.ui.inline.loader.widgetLoader {
  position:  absolute;
  left: auto;
  bottom: auto;
  display: none;
  right: 50px;
  z-index: 5;

  &.header {
    top: 4px;
  }

  &.noheader {
    top: 5px;
  }
}

.actionIcons {
  & > i.icon {
    margin-right: 2px !important;
  }
}

.ui.grid {

  .rightDivider {
    position: relative;
  }

  .rightDivider::after {
    content: "";
    border-left: 1px solid rgba(34, 36, 38, 0.15);
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    height: calc(100% - 2rem);
    position: absolute;
    right: 0;
    top: 1rem;
    width: 0;
  }

  .bottomDivider {
    position: relative;
  }

  .bottomDivider::after {
    content: "";
    border-top: 1px solid rgba(34, 36, 38, 0.15);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    width: calc(100% - 2rem);
    position: absolute;
    left: 1rem;
    bottom: 0;
    height: 0;
  }

}

.breakWord {
  display: block !important;
  word-wrap: break-word;
}

/* Modal */

.ui.modal.tiny {
  width: 500px !important;
  margin-left: -222px !important;
}

.ui.tiny.modal > .header:not(.ui) {
  font-size: 1.3em;
}

/* Center vertically */

.rightFloated {
  float: right;
}

.leftFloated {
  float: left;
}

.verticalCenter {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.alignCenter {
  text-align: center !important;
}

.noWrap {
  white-space: nowrap !important;
}

.fullHeight {
  height: 100%;
}

.noPadded {
  padding: 0 !important;
}

.ui.dropdown .menu>.item.indent {
  padding-left: 30px !important;
}

.ui.dropdown > a.label {
  text-decoration: none !important;
}

.ui.dropdown.multiple[role=combobox][aria-expanded=false] {
  overflow-y: auto;
  max-height: 35px;
}

.ui.form .inline.fields {
  align-items: unset !important;
}

.ui.divided.light.list>.item {
  border-top: 1px solid $grey-veryLight;
}

.ui.divided.light.list>.item:first-child {
  border-top: none;
}

/* A href underscore */
a.underline {
  text-decoration: none !important;
  color: inherit;

  &:hover {
    color: inherit;
  }

  &::before {
    backface-visibility: hidden;
    background-color: inherit;
    bottom: 1px;
    content: "";
    height: 1px;
    left: 0;
    position: absolute;
    top: auto;
    transform: scaleX(0);
    transition: all 0.2s ease 0s;
    width: 100%;
  }

  &:hover::before {
    background-color: $black;
    transform: scaleX(1);
  }
}

.clickable {
  cursor: pointer;
}

.superscripted {
  vertical-align: super;
}

/* NodesTree */

.nodes-tree li .rc-tree-node-content-wrapper {
  display: inline !important;
  padding: 1px 3px 3px 0  !important;
}

.typesHierarchy .rc-tree-switcher_open {
  display: none !important;
}

/* Splitter */

.widgetContent {
  .splitter-layout {
    top: 1rem;
    bottom: 0;
    left: 1rem;
    right: 1rem;
    width: inherit;
    height: inherit;

    &>.layout-splitter {
      background-color: $grey-light;
    }
  }
}

.ui.sidebar.editModeSidebar {
  box-shadow: none !important;
  background-color: transparent !important;
  max-width: 500px !important;
  margin: 0 calc(50% - 250px) !important;
  display: block;
  @media (min-width: 992px) {
    left: 6.5rem !important;
  }

  .content {
    margin-top: 10px;
    display: inline-block;
    width: 100%;
  }

  .button {
    margin-left: 5px;
    margin-right: 5px;
  }
}

.forceMaxWidth {
  white-space: pre-wrap;       /* Since CSS 2.1 */
  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
  white-space: -o-pre-wrap;    /* Opera 7 */
  word-wrap: break-word;       /* Internet Explorer 5.5+ */
  max-width: 500px;
  margin: 1px;
}

.topRightCorner {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

.hopscotch-close {
  cursor: pointer;
}

.ui.ordered.list .list>.item:before, .ui.ordered.list>.item:before, ol.ui.list li:before {
  position: relative !important;
  margin-right: 0.25rem !important;
  content: counters(ordered,".") "." !important;
  vertical-align: inherit !important;
}

.widgetButton {
  width: 100%;
}
